GER_can_be_germany = {
	OR = {
		tag = GER
		original_tag = GER
		#has_event_target = germany #this shit is broken
	}
}

GER_is_chancellor_vacant = {
  custom_trigger_tooltip = {
    tooltip = GER_is_chancellor_vacant_tt
    any_character = {
      is_character_slot = head_of_government
      is_hired_as_advisor = yes
      has_character_flag = GER_interim_chancellor
    } 
  }
}

#####################
# Military Triggers #
#####################

GER_military_conservative_influence_check = {
	set_temp_variable = { GER_military_conservative_influence = 0 }
	if = {
		limit = { 
			has_character = GER_Gerd_von_Rundstedt
			ROOT = { GER_Gerd_von_Rundstedt = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 5 }
	}
	if = {
		limit = { 
			has_character = GER_Gunther_von_Kluge
			ROOT = { GER_Gunther_von_Kluge = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 1 }
	}
	if = {
		limit = { 
			has_character = GER_Fedor_von_Bock
			ROOT = { GER_Fedor_von_Bock = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 1 }
	}
	if = {
		limit = { 
			has_character = GER_Ritter_von_Leeb
			ROOT = { GER_Ritter_von_Leeb = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 3 }
	}
	if = {
		limit = { 
			has_character = GER_Ewald_von_Kleist
			ROOT = { GER_Ewald_von_Kleist = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 2 }
	}
	if = {
		limit = { 
			has_character = GER_Ludwig_Beck
			ROOT = { GER_Ludwig_Beck = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 4 }
	}
	if = {
		limit = { 
			has_character = GER_Werner_von_Fritsch
			ROOT = { GER_Werner_von_Fritsch = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 5 }
	}
	if = {
		limit = { 
			has_character = GER_Walther_von_Brauchitsch
			ROOT = { GER_Walther_von_Brauchitsch = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 2 }
	}
	if = {
		limit = { 
			has_character = GER_Franz_Halder
			ROOT = { GER_Franz_Halder = { has_trait = hidden_sympathies } }
		}
		add_to_temp_variable = { GER_military_conservative_influence = 1 }
	}
}

GER_promotion_boost = {
	set_temp_variable = { infantry_ratio = num_battalions_with_type@infantry }
	add_to_temp_variable = { infantry_ratio = num_battalions_with_type@marine }
	add_to_temp_variable = { infantry_ratio = num_battalions_with_type@mountaineers }
	add_to_temp_variable = { infantry_ratio = num_battalions_with_type@paratrooper }
	set_temp_variable = { mob_ratio = num_battalions_with_type@motorized }
	add_to_temp_variable = { mob_ratio = num_battalions_with_type@mechanized }
	add_to_temp_variable = { mob_ratio = num_battalions_with_type@cavalry }
	set_temp_variable = { tank_ratio = num_battalions_with_type@light_armor }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@medium_armor }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@heavy_armor }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@modern_armor }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@super_heavy_armor }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@modern_tank_destroyer_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@super_heavy_tank_destroyer_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@heavy_tank_destroyer_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@medium_tank_destroyer_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@light_tank_destroyer_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@modern_sp_artillery_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@super_heavy_sp_artillery_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@heavy_sp_artillery_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@medium_sp_artillery_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@light_sp_artillery_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@modern_sp_anti_air_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@super_heavy_sp_anti_air_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@heavy_sp_anti_air_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@medium_sp_anti_air_brigade }
	add_to_temp_variable = { tank_ratio = num_battalions_with_type@light_sp_anti_air_brigade }
	set_temp_variable = { art_amount = num_battalions_with_type@rocket_artillery }
	add_to_temp_variable = { art_amount = num_battalions_with_type@artillery }
	add_to_temp_variable = { art_amount = num_battalions_with_type@artillery_brigade }
	add_to_temp_variable = { art_amount = num_battalions_with_type@mot_artillery_brigade }
	add_to_temp_variable = { art_amount = num_battalions_with_type@rocket_artillery_brigade }
	add_to_temp_variable = { art_amount = num_battalions_with_type@mot_rocket_artillery_brigade }
	add_to_temp_variable = { art_amount = num_battalions_with_type@motorized_rocket_brigade }
	if = {
		limit = {
			check_variable = { tank_ratio > mob_ratio }
			check_variable = { tank_ratio > infantry_ratio }
		}
		set_temp_variable = { GER_promotion_val = 1 }
	}
	else_if = {
		limit = {
			check_variable = { tank_ratio < mob_ratio }
			check_variable = { mob_ratio > infantry_ratio }
		}
		set_temp_variable = { GER_promotion_val = 2 }
	}
	else = {
		set_temp_variable = { GER_promotion_val = 3 }
	}
	if = {
		limit = { check_variable = { art_amount > 49 } }
		set_temp_variable = { art_amount = 25 }
	}
	else = { multiply_temp_variable = { art_amount = 0.5 } }
	if = {
		limit = {
			OR = {
				has_trait = tst_commander
				has_trait = tst_better_commander
			}
		}
		set_temp_variable = { GER_tst_command = 1 }
	}
}

GER_stormtrooper_checks = {
	set_temp_variable = { GER_total_army = ROOT.num_battalions }
	set_temp_variable = { GER_tst_army = ROOT.num_battalions_with_type@trutzbundischestosstruppe }
	divide_temp_variable = { GER_tst_army = GER_total_army }
}


###########################################################
# 																												#
#						    	BALANCE OF POWER MECHANIC							  #
#																													#
###########################################################

GER_has_bop_with_yc = {
  is_power_balance_side_active = {
    id = GER_power_balance
    side = GER_yc_side
  }
}

GER_has_bop_with_tst = {
  is_power_balance_side_active = {
    id = GER_power_balance
    side = GER_tst_side
  }
}

GER_val_winning_small = {
	power_balance_value = {
		id = GER_power_balance
		value > 0.1
	}
}

GER_val_winning_medium = {
	power_balance_value = {
		id = GER_power_balance
		value > 0.3
	}
}

GER_val_winning_big = {
	power_balance_value = {
		id = GER_power_balance
		value > 0.6
	}
}

GER_other_winning_small = {
	power_balance_value = {
		id = GER_power_balance
		value < -0.1
	}
}

GER_other_winning_medium = {
	power_balance_value = {
		id = GER_power_balance
		value < -0.3
	}
}

GER_other_winning_big = {
	power_balance_value = {
		id = GER_power_balance
		value < -0.6
	}
}

GER_has_bop_within_tst = {
	is_power_balance_side_active = {
		id = GER_power_balance
		side = GER_gauch_side
	}
}

###########################################################
# 																												#
#						   	CULTURAL REVOLUTION MECHANIC							#
#																													#
###########################################################

GER_kirchenkampf_over_trigger = {
	custom_trigger_tooltip = {
		tooltip = GER_kirchenkampf_ended_trigger
		OR = {
			AND = {
				NOT = { has_idea = GER_clerical_spectre }
				NOT = { has_idea = GER_clerical_spectre_2 }
				NOT = { has_idea = GER_kirchenkampf_spirit }
			}
			has_idea = GER_failed_kirchenkampf
			has_idea = GER_zeitgeist_victory
			has_idea = GER_spiritual_revival
		}
	}
}

GER_intensity_measuring_trigger = {
	set_temp_variable = { GER_kirchenkampf_intensity_factor_tt = GER_kirchenkampf_intensity_factor }
	divide_temp_variable = { GER_kirchenkampf_intensity_factor_tt = GER_current_church_pop }
	add_to_temp_variable = { GER_kirchenkampf_intensity_factor_tt = 1 }
	divide_temp_variable = { GER_kirchenkampf_intensity_factor_tt = -2 }
	clamp_temp_variable = {
		var = GER_kirchenkampf_intensity_factor_tt
		min = 0
	}
}

GER_reich_change_counter_tt_trigger = {
	set_temp_variable = { GER_reich_change_counter = GER_kirchenkampf_intensity_less_factor }
}

GER_is_cultural_revolution_started = {
	custom_trigger_tooltip = {
		tooltip = GER_cultural_revolution_started
		has_global_flag = GER_cultural_revolution_started
	}
}

GER_is_doing_cultural_decision = {
  custom_trigger_tooltip = {
    tooltip = GER_is_doing_cultural_decision_tt
	has_country_flag = GER_is_doing_cultural_decision
	NOT = { check_variable = { GER_extra_cultural_option > 0 } }
  }
}

GER_is_doing_kk_decision = {
  custom_trigger_tooltip = {
    tooltip = GER_is_doing_kk_decision_tt
    has_country_flag = GER_is_doing_kk_decision
  }
}

GER_is_morale_very_low = { # Country Scope
  check_variable = { reich_morale < 20 }
}

GER_is_morale_low = { # Country Scope
  check_variable = { reich_morale > 19 }
	check_variable = { reich_morale < 40 }
}

GER_is_morale_medium = { # Country Scope
  check_variable = { reich_morale > 39 }
	check_variable = { reich_morale < 60 }
}

GER_is_morale_high = { # Country Scope
  check_variable = { reich_morale > 59 }
	check_variable = { reich_morale < 80 }
}

GER_is_morale_very_high = { # Country Scope
  check_variable = { reich_morale > 79 }
}

GER_is_outlook_very_low = { # Country Scope
  check_variable = { reich_outlook < 20 }
}

GER_is_outlook_low = { # Country Scope
  check_variable = { reich_outlook > 19 }
	check_variable = { reich_outlook < 40 }
}

GER_is_outlook_medium = { # Country Scope
  check_variable = { reich_outlook > 39 }
	check_variable = { reich_outlook < 60 }
}

GER_is_outlook_high = { # Country Scope
  check_variable = { reich_outlook > 59 }
	check_variable = { reich_outlook < 80 }
}

GER_is_outlook_very_high = { # Country Scope
  check_variable = { reich_outlook > 79 }
}

GER_is_attitude_very_low = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    check_variable = { GER.attitude@THIS.belongs_to_region < -60 }
  }
}

GER_is_attitude_low = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    check_variable = { GER.attitude@PREV.belongs_to_region < -20 }
    check_variable = { GER.attitude@THIS.belongs_to_region > -61 }
  }
}

GER_is_attitude_neutral = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    check_variable = { GER.attitude@THIS.belongs_to_region > -21 }
    check_variable = { GER.attitude@THIS.belongs_to_region < 20 }
  }
}

GER_is_attitude_high = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    check_variable = { GER.attitude@THIS.belongs_to_region > 19 }
    check_variable = { GER.attitude@THIS.belongs_to_region < 60 }
  }
}

GER_is_attitude_very_high = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    check_variable = { GER.attitude@THIS.belongs_to_region > 59}
  }
}

GER_is_progress_very_low = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    GER = { check_variable = { progress@PREV.belongs_to_region < 26 } }
  }
}

GER_is_progress_low = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    GER = { 
		check_variable = { progress@PREV.belongs_to_region > 25 }
		check_variable = { progress@PREV.belongs_to_region < 51 }
	}
  }
}

GER_is_progress_high = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    GER = { 
		check_variable = { progress@PREV.belongs_to_region > 50 }
		check_variable = { progress@PREV.belongs_to_region < 75 }
	}
  }
}

GER_is_progress_very_high = { # State Scope
  if = {
    limit = { has_variable = belongs_to_region }
    GER = { check_variable = { progress@PREV.belongs_to_region > 74 } }
  }
}

GER_compute_average_attitude = {
	if = {
		limit = { check_variable = { GER_total_attitude = 0 } }
		all_of_scopes = {
			array = cultural_target_state
			PREV = {
				add_to_temp_variable = { GER_total_attitude = GER.attitude@PREV.belongs_to_region }
				add_to_temp_variable = { number_of_states = 1 }
				if = {
					limit = { PREV = { NOT = { is_owned_by = PREV } } }
					add_to_temp_variable = { number_of_states = -1 }
					subtract_from_temp_variable = { GER_total_attitude = GER.attitude@PREV.belongs_to_region }
				}
			}
		}
		multiply_temp_variable = { number_of_states = 100 }
		divide_temp_variable = { GER_total_attitude = number_of_states }
	}
}

GER_compute_average_progress = {
	if = {
		limit = { check_variable = { GER_total_progress_rate = 0 } }
		all_of_scopes = {
			array = cultural_target_state
			PREV = {
				add_to_temp_variable = { GER_total_progress_rate = GER.progress@PREV.belongs_to_region }
				add_to_temp_variable = { number_of_states = 1 }
				if = {
					limit = { PREV = { NOT = { is_owned_by = PREV } } }
					add_to_temp_variable = { number_of_states = -1 }
					subtract_from_temp_variable = { GER_total_progress_rate = GER.progress@PREV.belongs_to_region }
				}
			}
		}
		multiply_temp_variable = { number_of_states = 100 }
		divide_temp_variable = { GER_total_progress_rate = number_of_states }
	}
}

GER_measure_morale_ending_factor = {
	GER_compute_average_progress = yes
	if = {
		limit = { check_variable = { GER_total_progress_rate > 0.55 } }
		add_to_temp_variable = { GER_total_progress_rate = 1 }
	}
	if = {
		limit = { GER_is_morale_very_high = yes }
		set_temp_variable = { GER_temp_ending_state_factor = 0.15 }
	}
	else_if = {
		limit = { GER_is_morale_high = yes }
		set_temp_variable = { GER_temp_ending_state_factor = 0.125 }
	}
	else_if = {
		limit = { GER_is_morale_medium = yes }
		set_temp_variable = { GER_temp_ending_state_factor = 0.10 }
	}
	else_if = {
		limit = { GER_is_morale_low = yes }
		set_temp_variable = { GER_temp_ending_state_factor = 0.075 }
	}
	else = {
		set_temp_variable = { GER_temp_ending_state_factor = 0.05 }
	}
}

GER_measure_outlook_ending_factor = {
	GER_compute_average_progress = yes
	if = {
		limit = { check_variable = { GER_total_progress_rate > 0.55 } }
		add_to_temp_variable = { GER_total_progress_rate = 1 }
	}
	if = {
		limit = { GER_is_outlook_very_high = yes }
		set_temp_variable = { GER_temp_ending_state_factor_alt = 0.15 }
	}
	else_if = {
		limit = { GER_is_outlook_high = yes }
		set_temp_variable = { GER_temp_ending_state_factor_alt = 0.125 }
	}
	else_if = {
		limit = { GER_is_outlook_medium = yes }
		set_temp_variable = { GER_temp_ending_state_factor_alt = 0.10 }
	}
	else_if = {
		limit = { GER_is_outlook_low = yes }
		set_temp_variable = { GER_temp_ending_state_factor_alt = 0.075 }
	}
	else = {
		set_temp_variable = { GER_temp_ending_state_factor_alt = 0.05 }
	}	
}

###########################################################
# 																												#
#							MINISTRY OF PROPAGANDA MECHANIC							#
#																													#
###########################################################

GER_propaganda_poster_slot_available = {
	custom_trigger_tooltip = {
		tooltip = GER_propaganda_poster_slot_available_tt
		any_of = {
			array = GER.propaganda_positions
			value = v
			check_variable = { frame@var:v = GER_propaganda_empty_slot_index }
		}
	}
}

###########################################################
# 																												#
#						   	         GAME RULES			       	    			#
#																													#
###########################################################

GER_has_rule_dressler = {
  has_game_rule = { rule = GER_path option = GER_DRESSLER_CONTROL }
}

GER_has_rule_yc_control = {
  has_game_rule = { rule = GER_path option = GER_YC_CONTROL }
}

GER_has_rule_tst_control = {
  has_game_rule = { rule = GER_path option = GER_TST_CONTROL }
}

GER_has_rule_yc_coalition = {
  has_game_rule = { rule = GER_path option = GER_YC_COALITION }
}

GER_has_rule_tst_coalition = {
  has_game_rule = { rule = GER_path option = GER_TST_COALITION }
}

GER_has_rule_civil_war = {
  has_game_rule = { rule = GER_path option = GER_CIVIL_WAR }
}

#################################
## RL Triggers 
#################################

GER_rl_resistance_check = {
	set_temp_variable = { FROM_manpower_state = FROM.state_population_k }
	meta_trigger = {
		text = {
			ROOT = {
				army_manpower_in_state = {
					amount > [RL_SUPPRESSION_MP]
					state = FROM
				}
			}
		}
		RL_SUPPRESSION_MP = "[RL_Suppression_MP]"
	}
}

GER_rl_states_integrate = {
	FROM = {
		all_owned_state = {
			OR = {
				NOT = { is_on_continent = europe }
				OR = {
					compliance > 70
					resistance < 15
				}
			}
		}
		NOT = { has_idea = GER_recently_established_admin_rl }
	}
}

GER_rl_exist = {
	custom_trigger_tooltip = {
		tooltip = GER_rl_exist
		any_country = { is_in_array = { global.GER_reichslander = THIS } }
	}
}

GER_rl_control_check = {
	OR = {
		original_tag = GER
		is_in_array = { global.GER_reichslander = THIS }
	}
}

GER_rlk_state_check = {
	OR = {
		is_core_of = GEO
		is_core_of = ARM
		is_core_of = AZR
		is_core_of = GOR
		state = 235
		state = 237
	}
}

GER_rlw_state_check = {
	OR = {
		is_core_of = LIT
		is_core_of = EST
		is_core_of = LAT
		is_core_of = BLR
		state = 948
		state = 791
		state = 210
		state = 209
		state = 208
		state = 242
		state = 243
		state = 791
	}
	NOT = { state = 194 }
}

GER_rlu_state_check = {
	OR = {
		is_core_of = UKR
		state = 218
		state = 234
		state = 1063
		state = 245
		state = 238
		state = 265
		state = 260
		state = 240
		state = 220
		state = 224
		state = 228
		state = 227
		state = 194
		state = 1062
	}
}

GER_gpo_rename_check = {
	OR = {
		state = 10
		state = 799
		state = 1065
		state = 88
		state = 89
		state = 91
		state = 97
		state = 889
		state = 11
		state = 189
		state = 96
		state = 13
		state = 191
		state = 758
		state = 19
		state = 12
		state = 914
		state = 95
		state = 204
		state = 194
		state = 206
		state = 207
		state = 72
		state = 137
		state = 953
		state = 94
		state = 93
		state = 199
		state = 201
		state = 198
		state = 203
		state = 202
		state = 197
		state = 196
		state = 226
		state = 193
		state = 241
		state = 259
		state = 200
		state = 227
		state = 798
		state = 948
		state = 401
		state = 258
		state = 257
		state = 244
		state = 243
		state = 210
		state = 235
		state = 238
		state = 265
		state = 351
		state = 253
		state = 253
		state = 255
		state = 250
		state = 256
		state = 214
		state = 252
		state = 248
		state = 264
		state = 209
		state = 263
		state = 195
		state = 246
		state = 224
		state = 222
		state = 1062
		state = 260
		state = 219
		state = 247
		state = 239
		state = 217
		state = 1063
		state = 245
		state = 218
		state = 234
		state = 236
	}
}

GER_compute_map_region_positions = {
	meta_trigger = {
		# debug = yes
		text = { set_temp_variable = { GER_map_region_frame = frame@[v] } }
		v = "[?region_value.GetTokenKey]"
	}
	
	if = {
		limit = { check_variable = { region_value = token:wurttemberg } }
		set_temp_variable = { GER_map_region_x = 576 }
		set_temp_variable = { GER_map_region_y = 540 }
	} else_if = {
		limit = { check_variable = { region_value = token:bayern } }
		set_temp_variable = { GER_map_region_x = 644 }
		set_temp_variable = { GER_map_region_y = 450 }
	} else_if = {
		limit = { check_variable = { region_value = token:baden } }
		set_temp_variable = { GER_map_region_x = 573 }
		set_temp_variable = { GER_map_region_y = 557 }
	} else_if = {
		limit = { check_variable = { region_value = token:hessen } }
		set_temp_variable = { GER_map_region_x = 576 }
		set_temp_variable = { GER_map_region_y = 412 }
	} else_if = {
		limit = { check_variable = { region_value = token:westfalen } }
		set_temp_variable = { GER_map_region_x = 541 }
		set_temp_variable = { GER_map_region_y = 380 }
	} else_if = {
		limit = { check_variable = { region_value = token:niedersachsen } }
		set_temp_variable = { GER_map_region_x = 523 }
		set_temp_variable = { GER_map_region_y = 287 }
	} else_if = {
		limit = { check_variable = { region_value = token:obersachsen } }
		set_temp_variable = { GER_map_region_x = 648 }
		set_temp_variable = { GER_map_region_y = 383 }
	} else_if = {
		limit = { check_variable = { region_value = token:brandenburg } }
		set_temp_variable = { GER_map_region_x = 695 }
		set_temp_variable = { GER_map_region_y = 259 }
	} else_if = {
		limit = { check_variable = { region_value = token:schlesien } }
		set_temp_variable = { GER_map_region_x = 811 }
		set_temp_variable = { GER_map_region_y = 368 }
	} else_if = {
		limit = { check_variable = { region_value = token:prussen } }
		set_temp_variable = { GER_map_region_x = 861 }
		set_temp_variable = { GER_map_region_y = 230 }
	} else_if = {
		limit = { check_variable = { region_value = token:rhein } }
		set_temp_variable = { GER_map_region_x = 465 }
		set_temp_variable = { GER_map_region_y = 383 }
	} else_if = {
		limit = { check_variable = { region_value = token:elsass_lorithgen } }
		set_temp_variable = { GER_map_region_x = 531 }
		set_temp_variable = { GER_map_region_y = 530 }
	} else_if = {
		limit = { check_variable = { region_value = token:schlewig_holstein } }
		set_temp_variable = { GER_map_region_x = 599 }
		set_temp_variable = { GER_map_region_y = 234 }
	} else_if = {
		limit = { check_variable = { region_value = token:osterreich } }
		set_temp_variable = { GER_map_region_x = 657 }
		set_temp_variable = { GER_map_region_y = 577 }
	} else_if = {
		limit = { check_variable = { region_value = token:sudetenland } }
		set_temp_variable = { GER_map_region_x = 769 }
		set_temp_variable = { GER_map_region_y = 472 }
	}
}