# GRE_enact_peace_tur_lost = {
	# 	if = {
		# 		limit = {
			# 			has_country_flag = first_greco_turkish_war
			# 		}
		# 		#
		# 		if = {
			# 			limit = {
				# 				GRE = {
					# 					has_elected_government = yes
					# 				}
				# 			}
			# 			GRE = {
				# 				transfer_state = 341
				# 				transfer_state = 347
				# 				transfer_state = 776
				# 				add_state_claim = 341
				# 				add_state_claim = 347
				# 				add_state_claim = 776
				# 				# unlock_decision_tooltip =
				# 				add_state_core = 183
				# 				add_state_core = 1054
				# 				add_state_core = 1053
				# 				add_state_core = 765
				# 			}
			# 		}
		# 		if = {
			# 			limit = { #hellenoturkism fascists, not byzantine ones
				# 				GRE = {
					# 					has_government = national_populist
					# 					has_country_flag = GRE_hellenoturkism
					# 				}
				# 			}
			# 			if = {
				# 				limit = {
					# 					TUR = {
						# 						exists = yes
						# 					}
					# 					TRT = {
						# 						exists = no
						# 					}
					# 				}
				# 				GRE = {
					# 					every_unit_leader = {
						# 						limit = {
							# 							has_nationality = TUR
							# 						}
						# 						set_nationality = GRE
						# 					}
					# 					TUR = {
						# 						transfer_navy = {
							# 							target = GRE
							# 						}
						# 						GRE = { transfer_technology = yes }
						# 					}
					# 					annex_country = {
						# 						target = TUR
						# 						transfer_troops = yes
						# 					}
					# 				}
				# 				else_if = {
					# 					limit = {
						# 						TRT = {
							# 							exists = yes
							# 						}
						# 						TUR = {
							# 							exists = no
							# 						}
						# 					}
					# 					GRE = {
						# 						every_unit_leader = {
							# 							limit = {
								# 								has_nationality = TRT
								# 							}
							# 							set_nationality = TRT
							# 						}
						# 						TRT = {
							# 							transfer_navy = {
								# 								target = GRE
								# 							}
							# 							GRE = { transfer_technology = yes }
							# 						}
						# 						annex_country = {
							# 							target = TRT
							# 							transfer_troops = yes
							# 						}
						# 					}
					# 				}
				# 				else = {
					# 					GRE = {

						# 						every_unit_leader = {
							# 							limit = {
								# 								OR = {
									# 									has_nationality = TRT
									# 									has_nationality = TUR
									# 								}
								# 							}
							# 							set_nationality = GRE
							# 						}
						# 						TRT = {
							# 							transfer_navy = {
								# 								target = GRE
								# 							}
							# 							GRE = { transfer_technology = yes }
							# 						}
						# 						TUR = {
							# 							transfer_navy = {
								# 								target = GRE
								# 							}
							# 							GRE = { transfer_technology = yes }
							# 						}
						# 						annex_country = {
							# 							target = TRT
							# 							transfer_troops = yes
							# 						}
						# 						annex_country = {
							# 							target = TUR
							# 							transfer_troops = yes
							# 						}
						# 					}
					# 				}
				# 				if = {
					# 					limit = {
						# 						GRE = {
							# 							NOT = {
								# 								has_elected_government = yes
								# 								has_country_flag = GRE_hellenoturkism
								# 							}
							# 						}
						# 					}
					# 					if = { #non-hellenoturkism fascists (byzantine ones)
						# 						limit = {
							# 							has_government = national_populist
							# 							has_country_flag = GRE_ethiniki_enosis_elladas
							# 						}
						# 						GRE = {
							# 							add_state_core = 340
							# 							transfer_state = 340
							# 							add_state_core = 776
							# 							transfer_state = 776
							# 							add_state_core = 347
							# 							transfer_state = 347
							# 							add_state_core = 341
							# 							transfer_state = 341
							# 							add_state_core = 183
							# 							add_state_core = 1053
							# 							add_state_core = 1054
							# 							add_state_claim = 787
							# 							add_state_claim = 764
							# 							add_state_core = 345
							# 							add_state_core = 765
							# 							# reminder to make the CYP scripted gui activate
							# 							#unlock_decision_category_tooltip =
							# 						}
						# 					}
					# 					if = {
						# 						limit = { #monarchists and valkists that both don't do theocracy
							# 							OR = {
								# 								has_government = valkist
								# 								has_government = authoritarian_democrat
								# 								has_government = paternal_autocrat
								# 							}
							# 							NOT = {
								# 								OR = {
									# 									has_country_flag = GRE_valkist_theocracy
									# 									has_country_flag = GRE_authdem_theocracy
									# 									has_country_flag = GRE_pataut_theocracy
									# 								}
								# 							}
							# 						}
						# 						GRE = {
							# 							add_state_core = 340
							# 							transfer_state = 340
							# 							add_state_core = 776
							# 							transfer_state = 776
							# 							add_state_core = 347
							# 							transfer_state = 347
							# 							add_state_core = 341
							# 							transfer_state = 341
							# 							add_state_core = 183
							# 							add_state_core = 1053
							# 							add_state_core = 1054
							# 							add_state_core = 345
							# 							add_state_core = 765
							# 							#event for ITA to grant dodecanese and 345 state + CYP gui
							# 						}
						# 					}
					# 					if = {
						# 						limit = { # theocratic patauts, authdem, valkists
							# 							OR = {
								# 								has_government = valkist
								# 								has_government = authoritarian_democrat
								# 								has_government = paternal_autocrat
								# 							}
							# 							OR = {
								# 								has_country_flag = GRE_valkist_theocracy
								# 								has_country_flag = GRE_authdem_theocracy
								# 								has_country_flag = GRE_pataut_theocracy
								# 							}
							# 						}
						# 						GRE = {
							# 							add_state_core = 340
							# 							transfer_state = 340
							# 							add_state_core = 776
							# 							transfer_state = 776
							# 							add_state_core = 347
							# 							transfer_state = 347
							# 							add_state_core = 341
							# 							transfer_state = 341
							# 							add_state_core = 183
							# 							add_state_core = 1053
							# 							add_state_core = 1054
							# 							add_state_core = 345
							# 							add_state_core = 765
							# 							every_state = {
								# 								limit = {
									# 									owner = {
										# 										OR = {
											# 											original_tag = TUR
											# 											original_tag = TRT
											# 										}
										# 									}
									# 									controller = {
										# 										OR = {
											# 											original_tag = TUR
											# 											original_tag = TRT
											# 										}
										# 									}
									# 									OR = {
										# 										is_core_of = TUR
										# 										is_core_of = TRT
										# 									}
									# 								}
								# 								add_claim_by = GRE
								# 							}
							# 							GRE = {
								# 								add_state_claim = 344
								# 								add_state_claim = 1030
								# 							}
							# 						}
						# 					}
					# 				}

				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					NOT = {
						# 						is_puppet_of = GRE
						# 					}
					# 				}
				# 				TRT = {
					# 					exists = no
					# 				}
				# 			}
			# 			TUR = {
				# 				OVERLORD = {
					# 					#will get an event for them to give required territories and peace out
					# 				}
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TRT = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					has_elected_government = yes
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TUR
					# 					autonomy_state = autonomy_colony
					# 				}
				# 				transfer_state = 341
				# 				transfer_state = 347
				# 				transfer_state = 776
				# 				add_state_claim = 341
				# 				add_state_claim = 347
				# 				add_state_claim = 776
				# 				# unlock_decision_tooltip =
				# 				add_state_core = 183
				# 				add_state_core = 1054
				# 				add_state_core = 1053
				# 				add_state_core = 765
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TRT = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					OR = {
						# 						has_government = authoritarian_democrat
						# 						has_government = paternal_autocrat
						# 						has_government = valkist
						# 					}
					# 					NOT = {
						# 						OR = {
							# 							has_country_flag = GRE_valkist_theocracy
							# 							has_country_flag = GRE_authdem_theocracy
							# 							has_country_flag = GRE_pataut_theocracy
							# 						}
						# 					}
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TUR
					# 					autonomy_state = autonomy_puppet
					# 				}
				# 				add_state_core = 340
				# 				transfer_state = 340
				# 				add_state_core = 776
				# 				transfer_state = 776
				# 				add_state_core = 347
				# 				transfer_state = 347
				# 				add_state_core = 341
				# 				transfer_state = 341
				# 				add_state_core = 183
				# 				add_state_core = 1053
				# 				add_state_core = 1054
				# 				add_state_core = 345
				# 				add_state_core = 765
				# 				#event for ITA to grant dodecanese and 345 state + CYP gui
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TRT = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					OR = {
						# 						has_government = authoritarian_democrat
						# 						has_government = paternal_autocrat
						# 						has_government = valkist
						# 					}
					# 					OR = {
						# 						has_country_flag = GRE_valkist_theocracy
						# 						has_country_flag = GRE_authdem_theocracy
						# 						has_country_flag = GRE_pataut_theocracy
						# 					}
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TUR
					# 					autonomy_state = autonomy_integrated_puppet
					# 				}
				# 				add_state_core = 340
				# 				transfer_state = 340
				# 				add_state_core = 776
				# 				transfer_state = 776
				# 				add_state_core = 347
				# 				transfer_state = 347
				# 				add_state_core = 341
				# 				transfer_state = 341
				# 				add_state_core = 183
				# 				add_state_core = 1053
				# 				add_state_core = 1054
				# 				add_state_core = 345
				# 				add_state_core = 765
				# 				every_state = {
					# 					limit = {
						# 						owner = {
							# 							OR = {
								# 								original_tag = TUR
								# 								original_tag = TRT
								# 							}
							# 						}
						# 						controller = {
							# 							OR = {
								# 								original_tag = TUR
								# 								original_tag = TRT
								# 							}
							# 						}
						# 						OR = {
							# 							is_core_of = TUR
							# 							is_core_of = TRT
							# 						}
						# 					}
					# 					add_claim_by = GRE
					# 				}
				# 				add_state_claim = 344
				# 				add_state_claim = 1030
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TRT = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					has_government = national_populist
					# 					has_country_flag = GRE_hellenoturkism
					# 				}
				# 			}
			# 			GRE = {
				# 				every_unit_leader = {
					# 					limit = {
						# 						has_nationality = TUR
						# 					}
					# 					set_nationality = GRE
					# 				}
				# 				TUR = {
					# 					transfer_navy = {
						# 						target = GRE
						# 					}
					# 					GRE = { transfer_technology = yes }
					# 				}
				# 				annex_country = {
					# 					target = TUR
					# 					transfer_troops = yes
					# 				}
				# 			}
			# 		}

		# 		# TRT TAG PUPPET

		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					NOT = {
						# 						is_puppet_of = GRE
						# 					}
					# 				}
				# 				TUR = {
					# 					exists = no
					# 				}
				# 			}
			# 			TRT = {
				# 				OVERLORD = {
					# 					#will get an event for them to give required territories and peace out
					# 				}
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TUR = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					has_elected_government = yes
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TRT
					# 					autonomy_state = autonomy_colony
					# 				}
				# 				transfer_state = 341
				# 				transfer_state = 347
				# 				transfer_state = 776
				# 				add_state_claim = 341
				# 				add_state_claim = 347
				# 				add_state_claim = 776
				# 				# unlock_decision_tooltip =
				# 				add_state_core = 183
				# 				add_state_core = 1054
				# 				add_state_core = 1053
				# 				add_state_core = 765
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TUR = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					OR = {
						# 						has_government = authoritarian_democrat
						# 						has_government = paternal_autocrat
						# 						has_government = valkist
						# 					}
					# 					NOT = {
						# 						OR = {
							# 							has_country_flag = GRE_valkist_theocracy
							# 							has_country_flag = GRE_authdem_theocracy
							# 							has_country_flag = GRE_pataut_theocracy
							# 						}
						# 					}
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TRT
					# 					autonomy_state = autonomy_puppet
					# 				}
				# 				add_state_core = 340
				# 				transfer_state = 340
				# 				add_state_core = 776
				# 				transfer_state = 776
				# 				add_state_core = 347
				# 				transfer_state = 347
				# 				add_state_core = 341
				# 				transfer_state = 341
				# 				add_state_core = 183
				# 				add_state_core = 1053
				# 				add_state_core = 1054
				# 				add_state_core = 345
				# 				add_state_core = 765
				# 				#event for ITA to grant dodecanese and 345 state + CYP gui
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TUR = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					OR = {
						# 						has_government = authoritarian_democrat
						# 						has_government = paternal_autocrat
						# 						has_government = valkist
						# 					}
					# 					OR = {
						# 						has_country_flag = GRE_valkist_theocracy
						# 						has_country_flag = GRE_authdem_theocracy
						# 						has_country_flag = GRE_pataut_theocracy
						# 					}
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TRT
					# 					autonomy_state = autonomy_integrated_puppet
					# 				}
				# 				add_state_core = 340
				# 				transfer_state = 340
				# 				add_state_core = 776
				# 				transfer_state = 776
				# 				add_state_core = 347
				# 				transfer_state = 347
				# 				add_state_core = 341
				# 				transfer_state = 341
				# 				add_state_core = 183
				# 				add_state_core = 1053
				# 				add_state_core = 1054
				# 				add_state_core = 345
				# 				add_state_core = 765
				# 				every_state = {
					# 					limit = {
						# 						owner = {
							# 							OR = {
								# 								original_tag = TUR
								# 								original_tag = TRT
								# 							}
							# 						}
						# 						controller = {
							# 							OR = {
								# 								original_tag = TUR
								# 								original_tag = TRT
								# 							}
							# 						}
						# 						OR = {
							# 							is_core_of = TUR
							# 							is_core_of = TRT
							# 						}
						# 					}
					# 					add_claim_by = GRE
					# 				}
				# 				add_state_claim = 344
				# 				add_state_claim = 1030
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TUR = {
					# 					exists = no
					# 				}
				# 				GRE = {
					# 					has_government = national_populist
					# 					has_country_flag = GRE_hellenoturkism
					# 				}
				# 			}
			# 			GRE = {
				# 				every_unit_leader = {
					# 					limit = {
						# 						has_nationality = TRT
						# 					}
					# 					set_nationality = GRE
					# 				}
				# 				TRT = {
					# 					transfer_navy = {
						# 						target = GRE
						# 					}
					# 					GRE = { transfer_technology = yes }
					# 				}
				# 				annex_country = {
					# 					target = TRT
					# 					transfer_troops = yes
					# 				}
				# 			}
			# 		}

		# 		# BOTH TRT AND TUR EXIST AND ARE PUPPETS (DONT ASK ME HOW THE FUCK THIS CAN HAPPEN, IT SHOULDN'T BE FUCKING POSSIBLE, BUT I'LL REGARDLESS DO IT

		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					NOT = {
						# 						is_puppet_of = GRE
						# 					}
					# 				}
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					NOT = {
						# 						is_puppet_of = GRE
						# 					}
					# 				}
				# 			}
			# 			TRT = {
				# 				OVERLORD = {
					# 					#will get an event for them to give required territories and peace out
					# 				}
				# 			}
			# 			TUR = {
				# 				OVERLORD = {
					# 					#same thing basically
					# 				}
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				GRE = {
					# 					has_elected_government = yes
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TRT
					# 					autonomy_state = autonomy_colony
					# 				}
				# 				set_autonomy = {
					# 					target = TUR
					# 					autonomy_state = autonomy_colony
					# 				}
				# 				transfer_state = 341
				# 				transfer_state = 347
				# 				transfer_state = 776
				# 				add_state_claim = 341
				# 				add_state_claim = 347
				# 				add_state_claim = 776
				# 				# unlock_decision_tooltip =
				# 				add_state_core = 183
				# 				add_state_core = 1054
				# 				add_state_core = 1053
				# 				add_state_core = 765
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				GRE = {
					# 					OR = {
						# 						has_government = authoritarian_democrat
						# 						has_government = paternal_autocrat
						# 						has_government = valkist
						# 					}
					# 					NOT = {
						# 						OR = {
							# 							has_country_flag = GRE_valkist_theocracy
							# 							has_country_flag = GRE_authdem_theocracy
							# 							has_country_flag = GRE_pataut_theocracy
							# 						}
						# 					}
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TUR
					# 					autonomy_state = autonomy_puppet
					# 				}
				# 				set_autonomy = {
					# 					target = TRT
					# 					autonomy_state = autonomy_puppet
					# 				}
				# 				add_state_core = 340
				# 				transfer_state = 340
				# 				add_state_core = 776
				# 				transfer_state = 776
				# 				add_state_core = 347
				# 				transfer_state = 347
				# 				add_state_core = 341
				# 				transfer_state = 341
				# 				add_state_core = 183
				# 				add_state_core = 1053
				# 				add_state_core = 1054
				# 				add_state_core = 345
				# 				add_state_core = 765
				# 				#event for ITA to grant dodecanese and 345 state + CYP gui
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TUR = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				GRE = {
					# 					OR = {
						# 						has_government = authoritarian_democrat
						# 						has_government = paternal_autocrat
						# 						has_government = valkist
						# 					}
					# 					OR = {
						# 						has_country_flag = GRE_valkist_theocracy
						# 						has_country_flag = GRE_authdem_theocracy
						# 						has_country_flag = GRE_pataut_theocracy
						# 					}
					# 				}
				# 			}
			# 			GRE = {
				# 				set_autonomy = {
					# 					target = TRT
					# 					autonomy_state = autonomy_integrated_puppet
					# 				}
				# 				set_autonomy = {
					# 					target = TUR
					# 					autonomy_state = autonomy_integrated_puppet
					# 				}
				# 				add_state_core = 340
				# 				transfer_state = 340
				# 				add_state_core = 776
				# 				transfer_state = 776
				# 				add_state_core = 347
				# 				transfer_state = 347
				# 				add_state_core = 341
				# 				transfer_state = 341
				# 				add_state_core = 183
				# 				add_state_core = 1053
				# 				add_state_core = 1054
				# 				add_state_core = 345
				# 				add_state_core = 765
				# 				every_state = {
					# 					limit = {
						# 						owner = {
							# 							OR = {
								# 								original_tag = TUR
								# 								original_tag = TRT
								# 							}
							# 						}
						# 						controller = {
							# 							OR = {
								# 								original_tag = TUR
								# 								original_tag = TRT
								# 							}
							# 						}
						# 						OR = {
							# 							is_core_of = TUR
							# 							is_core_of = TRT
							# 						}
						# 					}
					# 					add_claim_by = GRE
					# 				}
				# 				add_state_claim = 344
				# 				add_state_claim = 1030
				# 			}
			# 		}
		# 		else_if = {
			# 			limit = {
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				TRT = {
					# 					exists = yes
					# 					is_puppet = yes
					# 					is_puppet_of = GRE
					# 				}
				# 				GRE = {
					# 					has_government = national_populist
					# 					has_country_flag = GRE_hellenoturkism
					# 				}
				# 			}
			# 			GRE = {
				# 				every_unit_leader = {
					# 					limit = {
						# 						has_nationality = TRT
						# 					}
					# 					set_nationality = GRE
					# 				}
				# 				TRT = {
					# 					transfer_navy = {
						# 						target = GRE
						# 					}
					# 					GRE = { transfer_technology = yes }
					# 				}
				# 				annex_country = {
					# 					target = TRT
					# 					transfer_troops = yes
					# 				}

				# 				every_unit_leader = {
					# 					limit = {
						# 						has_nationality = TUR
						# 					}
					# 					set_nationality = GRE
					# 				}
				# 				TUR = {
					# 					transfer_navy = {
						# 						target = GRE
						# 					}
					# 					GRE = { transfer_technology = yes }
					# 				}
				# 				annex_country = {
					# 					target = TUR
					# 					transfer_troops = yes
					# 				}
				# 			}
			# 		}


		# 		### SECOND GRECO-TURKISH-WAR (yet again)
		# 		#TUR
		# 		else_if = {
			# 			limit = {
				# 				has_country_flag = second_greco_turkish_war
				# 			}
			# 			#
			# 			if = {
				# 				limit = {
					# 					has_elected_government = yes
					# 				}
				# 				GRE = {
					# 					transfer_state = 343
					# 					add_state_core = 343
					# 					add_state_claim = 345
					# 					add_state_claim = 764
					# 					add_state_claim = 796
					# 					if = {
						# 						limit = {
							# 							TUR = {
								# 								exists = yes
								# 							}
							# 							NOT = {
								# 								TRT = { exists = yes }
								# 							}
							# 						}
						# 					}
					# 					set_autonomy = {
						# 						target = TUR
						# 						autonomy_state = autonomy_syntrofos
						# 					}
					# 				}
				# 				TUR = {
					# 					load_focus_tree = generic_focus
					# 					set_cosmetic_tag = TUR_GRE
					# 				}
				# 			}
			# 			# TRT
			# 			if = {
				# 				limit = {
					# 					has_elected_government = yes
					# 					TRT = {
						# 						exists = yes
						# 					}
					# 					NOT = {
						# 						TUR = { exists = yes }
						# 					}
					# 				}
				# 				GRE = {
					# 					transfer_state = 343
					# 					add_state_core = 343
					# 					add_state_claim = 345
					# 					add_state_claim = 764
					# 					add_state_claim = 796
					# 					set_autonomy = {
						# 						target = TRT
						# 						autonomy_state = autonomy_syntrofos
						# 					}
					# 				}
				# 				TRT = {
					# 					load_focus_tree = generic_focus
					# 					set_cosmetic_tag = TUR_GRE
					# 				}
				# 			}

			# 			if = {
				# 				limit = {
					# 					has_elected_government = yes
					# 					TRT = {
						# 						exists = yes
						# 					}
					# 					NOT = {
						# 						TUR = { exists = yes }
						# 					}
					# 				}
				# 				GRE = {
					# 					transfer_state = 343
					# 					add_state_core = 343
					# 					add_state_claim = 345
					# 					add_state_claim = 764
					# 					add_state_claim = 796
					# 					set_autonomy = {
						# 						target = TRT
						# 						autonomy_state = autonomy_syntrofos
						# 					}
					# 				}
				# 				TRT = {
					# 					load_focus_tree = generic_focus
					# 					set_cosmetic_tag = TUR_GRE
					# 				}
				# 			}
			# 			#Both exist
			# 			if = {
				# 				limit = {
					# 					has_elected_government = yes
					# 					TRT = {
						# 						exists = yes
						# 					}
					# 					TUR = {
						# 						exists = yes
						# 					}
					# 				}
				# 				GRE = {
					# 					transfer_state = 343
					# 					add_state_core = 343
					# 					add_state_claim = 345
					# 					add_state_claim = 764
					# 					add_state_claim = 796
					# 					set_autonomy = {
						# 						target = TUR
						# 						autonomy_state = autonomy_syntrofos
						# 					}
					# 				}
				# 				TRT = {
					# 					every_unit_leader = {
						# 						limit = {
							# 							has_nationality = TRT
							# 						}
						# 						set_nationality = TUR
						# 					}
					# 					transfer_navy = {
						# 						target = TUR
						# 					}
					# 				}
				# 				TUR = {
					# 					load_focus_tree = generic_focus
					# 					set_cosmetic_tag = TUR_GRE
					# 					annex_country = {
						# 						target = TRT
						# 						transfer_troops = yes
						# 					}
					# 				}
				# 			}

			# 			if = {
				# 				limit = {
					# 					NOT = {
						# 						has_elected_government = yes
						# 						TRT = {
							# 							exists = yes
							# 						}
						# 					}
					# 					TUR = {
						# 						exists = yes
						# 					}
					# 				}
				# 				GRE = {
					# 					transfer_state = 343
					# 					add_state_core = 343
					# 					add_state_claim = 345
					# 					add_state_core = 764
					# 					add_state_core = 796
					# 					set_autonomy = {
						# 						target = TUR
						# 						autonomy_state = autonomy_syntrofos
						# 					}
					# 				}
				# 				TUR = {
					# 					load_focus_tree = generic_focus
					# 					set_cosmetic_tag = TUR_GRE
					# 				}
				# 			}

			# 			if = {
				# 				limit = {
					# 					NOT = {
						# 						has_elected_government = yes
						# 						TUR = {
							# 							exists = yes
							# 						}
						# 					}
					# 					TRT = {
						# 						exists = yes
						# 					}
					# 				}
				# 				GRE = {
					# 					transfer_state = 343
					# 					add_state_core = 343
					# 					add_state_claim = 345
					# 					add_state_core = 764
					# 					add_state_core = 796
					# 					set_autonomy = {
						# 						target = TRT
						# 						autonomy_state = autonomy_syntrofos
						# 					}
					# 				}
				# 				TRT = {
					# 					load_focus_tree = generic_focus
					# 					set_cosmetic_tag = TUR_GRE
					# 				}
				# 			}

			# 			if = {
				# 				limit = {
					# 					NOT = {
						# 						has_elected_government = yes
						# 					}
					# 					TUR = {
						# 						exists = yes
						# 					}
					# 					TRT = {
						# 						exists = yes
						# 					}
					# 				}
				# 				GRE = {
					# 					transfer_state = 343
					# 					add_state_core = 343
					# 					add_state_claim = 345
					# 					add_state_core = 764
					# 					add_state_core = 796
					# 					set_autonomy = {
						# 						target = TUR
						# 						autonomy_state = autonomy_syntrofos
						# 					}
					# 				}
				# 				TRT = {
					# 					every_unit_leader = {
						# 						limit = {
							# 							has_nationality = TRT
							# 						}
						# 						set_nationality = TUR
						# 					}
					# 					transfer_navy = {
						# 						target = TUR
						# 					}
					# 				}
				# 				TUR = {
					# 					load_focus_tree = generic_focus
					# 					set_cosmetic_tag = TUR_GRE
					# 					annex_country = {
						# 						target = TRT
						# 						transfer_troops = yes
						# 					}
					# 				}
				# 			}
			# 		}
		# 	}
	# }

BYZ_add_to_commonwealth = {
	if = {
		limit = {
			BYZ_is_in_commonwealth = no
		}
		var:tag_to_add_to_byz_commonwealth = {
			custom_effect_tooltip = BYZ_add_to_commonwealth
			add_to_array = { GRE.BYZ_commonwealth_members = THIS }
		}

	}
}

BYZ_debug_add_commonwealth_members = {
	every_country = {
		custom_effect_tooltip = BYZ_add_to_commonwealth
		add_to_array = { GRE.BYZ_commonwealth_members = THIS }
	}
}


GRE_hire_vangs = {
	# HOS: Giotopoulos
	activate_advisor = GRE_Pantelis_Pouliopoulos_hog_van
	activate_advisor = GRE_Olga_Bakola_eco_van
	activate_advisor = GRE_Serafeim_Maximos_for_van
	activate_advisor = GRE_Dimitris_Koutsogiannis_sec_van
}

GRE_hire_cols = {
	# HOS: Nikos Zachariadis
	activate_advisor = GRE_Giannis_Ioannidis_hog_col
	activate_advisor = GRE_Markos_Vafiadis_sec_col
	activate_advisor = GRE_Petros_Rousos_for_col
	activate_advisor = GRE_Vasilis_Bartziotas_eco_col
}

GRE_hire_libsocs = {
	# HOS: Nikos Zachariadis
	activate_advisor = GRE_Miltiadis_Porfyrogenis_hog_lib
	activate_advisor = GRE_Vasilis_Nefeloudis_sec_lib
	activate_advisor = GRE_Andreas_Tzimas_for_lib
	activate_advisor = GRE_Kostas_Theos_eco_lib
}

GRE_hire_socdems = {
	activate_advisor = GRE_Georgios_Papandreou_hog_sde
	activate_advisor = GRE_Aristotelis_Sideris_eco_sde
	activate_advisor = GRE_Dimitrios_Psarros_sec_sde
	activate_advisor = GRE_Alexandros_Papanastasiou_for_sde
}

GRE_hire_soclibs = {
	activate_advisor = GRE_Eleftherios_Kyriakou_Venizelos_hog_sli
	activate_advisor = GRE_Georgios_Maris_sec_sli
	activate_advisor = GRE_Andreas_Michalakopoulos_for_sli
	activate_advisor = GRE_Alexandros_Diomidis_eco_sli
}

GRE_hire_soclibs_sofoulis = {
	activate_advisor = GRE_Themistoklis_Sofoulis_hog_sli
	activate_advisor = GRE_Georgios_Maris_sec_sli
	activate_advisor = GRE_Andreas_Michalakopoulos_for_sli
	activate_advisor = GRE_Alexandros_Diomidis_eco_sli
}

GRE_hire_soclibs_sophoklis = {
	activate_advisor = GRE_Sofoklis_Venizelos_hog_sli
	activate_advisor = GRE_Georgios_Maris_sec_sli
	activate_advisor = GRE_Andreas_Michalakopoulos_for_sli
	activate_advisor = GRE_Alexandros_Diomidis_eco_sli
}

GRE_hire_marlibs = {
	activate_advisor = GRE_Georgios_Kondylis_hog_mli
	activate_advisor = GRE_Dimitrios_Stefanopoulos_sec_mli
	activate_advisor = GRE_Georgios_Kartalis_eco_mli
	activate_advisor = GRE_Ioannis_Theotokis_for_mli
}

GRE_hire_soccons = {
	activate_advisor = GRE_Konstantinos_Tsaldaris_hog_sco
	activate_advisor = GRE_Aristeidis_Basiakos_sec_sco
	activate_advisor = GRE_Georgios_Pesmazoglou_eco_sco
	activate_advisor = GRE_Dimitrios_Maximos_for_sco
}

GRE_hire_authdems = {
	activate_advisor = GRE_Sotirios_Gotzamanis_hog_ade
	activate_advisor = GRE_Kostas_Kotzias_sec_ade
	activate_advisor = GRE_Konstantinos_Logothetopoulos_for_ade
	activate_advisor = GRE_Nikolaos_Kanellopoulos_eco_ade
}

GRE_hire_patauts = {
	# HOS: Metaxas
	activate_advisor = GRE_Alexandros_Koryzis_hog_pau
	activate_advisor = GRE_Ioannis_Michail_Metaxas_for_pau
	activate_advisor = GRE_Georgios_Mantzavinos_eco_pau
	activate_advisor = GRE_Konstantinos_Maniadakis_sec_pau
}

GRE_hire_natpops = {
	# HOS: Kosmidis
	activate_advisor = GRE_Georgios_Poulos_hog_npo
	activate_advisor = GRE_Panagiotis_Demestichas_sec_npo
	activate_advisor = GRE_Ektor_Tsironikos_eco_npo
	activate_advisor = GRE_Anastasios_Tavoularis_for_npo
}

GRE_hire_valkists = {
	# HOS: Mercouris
	activate_advisor = GRE_Manolis_Manoleas_hog_val
	activate_advisor = GRE_Georgios_Simitis_eco_val
	activate_advisor = GRE_Dimitrios_Delivanis_for_val
	activate_advisor = GRE_Nikolaos_Kalyvas_sec_val
}

GRE_hire_ideology_ministers = {
	if = {
		limit = { has_government = vanguardist }
		GRE_hire_vangs = yes
	}
	else_if = {
		limit = { has_government = collectivist }
		GRE_hire_cols = yes
	}
	else_if = {
		limit = { has_government = libertarian_socialist }
		GRE_hire_libsocs = yes
	}
	else_if = {
		limit = { has_government = social_democrat }
		GRE_hire_socdems = yes
	}
	else_if = {
		limit = { has_government = social_liberal }
		if = {
			limit = {
				GRE_Eleftherios_Kyriakou_Venizelos = {
					is_advisor = yes
				}
			}
			GRE_hire_soclibs = yes
		}
		else_if = {
			limit = {
				GRE_Themistoklis_Sofoulis = {
					is_advisor = yes
				}
			}
			GRE_hire_soclibs_sofoulis = yes
		}
		else = {
			GRE_hire_soclibs_sophoklis = yes
		}
	}
	else_if = {
		limit = { has_government = market_liberal }
		GRE_hire_marlibs = yes
	}
	else_if = {
		limit = { has_government = social_conservative }
		GRE_hire_soccons = yes
	}
	else_if = {
		limit = { has_government = authoritarian_democrat }
		GRE_hire_authdems = yes
	}
	else_if = {
		limit = { has_government = paternal_autocrat }
		GRE_hire_patauts = yes
	}
	else_if = {
		limit = { has_government = national_populist }
		GRE_hire_natpops = yes
	}
	else_if = {
		limit = { has_government = valkist }
		GRE_hire_valkists = yes
	}
}

GRE_make_novas_head_of_all_democrats = {
	GRE_Georgios_Athanasiadis_Novas = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_NOVAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_liberal_subtype
				desc = POLITICS_NOVAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = market_liberal_subtype
				desc = POLITICS_NOVAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_NOVAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_NOVAS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_rallis_head_of_all_democrats = {
	GRE_Ioannis_Rallis = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_RALLIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = venizelism_subtype
				desc = POLITICS_RALLIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = marlib_venizelism_subtype
				desc = POLITICS_RALLIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_RALLIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_RALLIS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_glinos_head_of_all_democrats = {
	GRE_Dimitris_Glinos = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_GLINOS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = venizelism_subtype
				desc = POLITICS_GLINOS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = marlib_venizelism_subtype
				desc = POLITICS_GLINOS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_GLINOS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_GLINOS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_gonatas_head_of_all_democrats = {
	GRE_Stylianos_Gonatas = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_GONATAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = venizelism_subtype
				desc = POLITICS_GONATAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = marlib_venizelism_subtype
				desc = POLITICS_GONATAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_GONATAS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_GONATAS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_dragoumis_head_of_all_democrats = {
	GRE_Filippos_Dragoumis = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = market_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_partsalidis_head_of_all_democrats = {
	GRE_Dimitrios_Partsalidis = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_PARTSALIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = market_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_PARTSALIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_PARTSALIDIS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_iasonidis_head_of_all_democrats = {
	GRE_Leonidas_Iasonidis = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = market_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_kyrozis_head_of_all_democrats = {
	GRE_Ioannis_Kyrozis = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = market_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_make_sofianopoulos_head_of_all_democrats = {
	GRE_Ioannis_Sofianopoulos = {
		add_country_leader_role = {
			country_leader = {
				ideology = social_democrat_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = market_liberal_subtype
				desc = POLITICS_DRAGOUMIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = social_conservative_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
		add_country_leader_role = {
			country_leader = {
				ideology = authoritarian_democrat_subtype
				desc = POLITICS_IASONIDIS_DESC
			}
			promote_leader = yes
		}
	}
}

GRE_demote_previous_leader = {
	if = {
		limit = {
			has_country_flag = GRE_chose_rallis
		}
		GRE_Ioannis_Rallis = {
			remove_all_country_leader_roles = yes
		}
		else_if = {
			limit = {
				has_country_flag = GRE_chose_novas
			}
			GRE_Georgios_Athanasiadis_Novas = {
				remove_all_country_leader_roles = yes
			}
		}
		else_if = {
			limit = {
				has_country_flag = GRE_chose_glinos
			}
			GRE_Dimitris_Glinos = {
				remove_all_country_leader_roles = yes
			}
		}
	}
}

GRE_demote_previous_leader_1941 = {
	if = {
		limit = {
			has_country_flag = GRE_chose_rallis
		}
		GRE_Ioannis_Rallis = {
			remove_all_country_leader_roles = yes
		}
		else_if = {
			limit = {
				has_country_flag = GRE_chose_novas
			}
			GRE_Georgios_Athanasiadis_Novas = {
				remove_all_country_leader_roles = yes
			}
		}
		else_if = {
			limit = {
				has_country_flag = GRE_chose_glinos
			}
			GRE_Dimitris_Glinos = {
				remove_all_country_leader_roles = yes
			}
		}
		else_if = {
			limit = {
				has_country_flag = GRE_chose_dragoumis
			}
			GRE_Filippos_Dragoumis = {
				remove_all_country_leader_roles = yes
			}
		}
		else_if = {
			limit = {
				has_country_flag = GRE_chose_gonatas
			}
			GRE_Stylianos_Gonatas = {
				remove_all_country_leader_roles = yes
			}
		}
		else_if = {
			limit = {
				has_country_flag = GRE_chose_partsalidis
			}
			GRE_Dimitrios_Partsalidis = {
				remove_all_country_leader_roles = yes
			}
		}
	}
}

GRE_add_variants = {
	### Ship Variants ###

	### VARIANTS ###
	# 1936 Start #
	if = {
		limit = { not = { has_dlc = "Man the Guns" } }
		### Ship Variants ###
		create_equipment_variant = {
			name = "Hydra Class"
			type = destroyer_1
			upgrades = {
				ship_torpedo_upgrade = 2
				destroyer_engine_upgrade = 2
				ship_ASW_upgrade = 2
				ship_anti_air_upgrade = 2
			}
		}
	}
	if = {
		limit = { has_dlc = "Man the Guns" }
		# Submarines #
		create_equipment_variant = {
			name = "Katsonis Class"
			type = ship_hull_submarine_1
			name_group = GRE_SS_HISTORICAL
			parent_version = 0
			modules = {
				fixed_ship_torpedo_slot = ship_torpedo_sub_1
				fixed_ship_engine_slot = sub_ship_engine_1
				rear_1_custom_slot = empty
			}
			obsolete = yes
		}
		create_equipment_variant = {
			name = "Glafkos Class"
			type = ship_hull_submarine_2
			name_group = GRE_SS_HISTORICAL
			parent_version = 0
			modules = {
				fixed_ship_torpedo_slot = ship_torpedo_sub_1
				fixed_ship_engine_slot = sub_ship_engine_1
				rear_1_custom_slot = ship_torpedo_sub_1
			}
		}
		# Destroyers #
		create_equipment_variant = {
			name = "Aetos Class"
			type = ship_hull_light_1
			name_group = GRE_DD_HISTORICAL
			parent_version = 0
			modules = {
				fixed_ship_battery_slot = ship_light_battery_1
				fixed_ship_anti_air_slot = empty
				fixed_ship_fire_control_system_slot = ship_fire_control_system_0
				fixed_ship_radar_slot = empty
				fixed_ship_engine_slot = light_ship_engine_1
				fixed_ship_torpedo_slot = ship_torpedo_1
				mid_1_custom_slot = empty
				rear_1_custom_slot = empty
			}
			obsolete = yes
		}
		create_equipment_variant = {
			name = "Hydra Class"
			type = ship_hull_light_1
			name_group = GRE_DD_HISTORICAL
			parent_version = 0
			modules = {
				fixed_ship_battery_slot = ship_light_battery_1
				fixed_ship_anti_air_slot = ship_anti_air_1
				fixed_ship_fire_control_system_slot = ship_fire_control_system_0
				fixed_ship_radar_slot = empty
				fixed_ship_engine_slot = light_ship_engine_2
				fixed_ship_torpedo_slot = ship_torpedo_1
				mid_1_custom_slot = empty
				rear_1_custom_slot = ship_mine_layer_1
			}
		}
		# Cruisers #
		create_equipment_variant = {
			name = "Averof Class"
			type = ship_hull_cruiser_coastal_defense_ship
			name_group = GRE_CA_HISTORICAL
			parent_version = 0
			modules = {
				fixed_ship_battery_slot = ship_medium_battery_1
				fixed_ship_anti_air_slot = ship_anti_air_1
				fixed_ship_fire_control_system_slot = ship_fire_control_system_0
				fixed_ship_radar_slot = empty
				fixed_ship_engine_slot = cruiser_ship_engine_1
				fixed_ship_armor_slot = ship_armor_cruiser_2
				fixed_ship_secondaries_slot = ship_secondaries_1
				mid_1_custom_slot = empty
				mid_2_custom_slot = empty
				rear_1_custom_slot = ship_medium_battery_1
			}
			obsolete = yes
		}
		create_equipment_variant = {
			name = "Elli Class"
			type = ship_hull_cruiser_1
			name_group = GRE_CL_HISTORICAL
			parent_version = 0
			modules = {
				fixed_ship_battery_slot = ship_light_medium_battery_1
				fixed_ship_anti_air_slot = ship_anti_air_1
				fixed_ship_fire_control_system_slot = ship_fire_control_system_0
				fixed_ship_radar_slot = empty
				fixed_ship_engine_slot = cruiser_ship_engine_1
				fixed_ship_armor_slot = empty
				fixed_ship_secondaries_slot = empty
				mid_1_custom_slot = ship_torpedo_1
				mid_2_custom_slot = empty
				rear_1_custom_slot = ship_mine_layer_1
			}
		}
		# Battleships #
		create_equipment_variant = {
			name = "Kilkis Class"
			type = ship_hull_pre_dreadnought
			name_group = GRE_BB_HISTORICAL
			parent_version = 0
			modules = {
				fixed_ship_battery_slot = ship_heavy_battery_1
				fixed_ship_anti_air_slot = ship_anti_air_1
				fixed_ship_fire_control_system_slot = ship_fire_control_system_0
				fixed_ship_radar_slot = empty
				fixed_ship_engine_slot = heavy_ship_engine_1
				fixed_ship_secondaries_slot = ship_secondaries_1
				fixed_ship_armor_slot = ship_armor_bb_1
				front_1_custom_slot = empty
				mid_1_custom_slot = empty
				rear_1_custom_slot = empty
			}
			obsolete = yes
		}
	}
	if = {
		limit = {
			has_dlc_bba = yes
		}
		create_equipment_variant = {
			name = "AEKKEA-RAAB R-29"
			type = small_plane_airframe_1
			modules = {
				fixed_main_weapon_slot = light_mg_4x
				engine_type_slot = engine_2_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "Avro 621 Tutor"
			type = small_plane_cas_airframe_0
			modules = {
				fixed_main_weapon_slot = bomb_locks
				fixed_auxiliary_weapon_slot_1 = light_mg_2x
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "AEKKEA-RAAB"
			type = small_plane_airframe_0
			modules = {
				fixed_main_weapon_slot = light_mg_2x
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
	}
}

GRE_add_technologies = {
	if = {
		limit = { has_dlc = "By Blood Alone" }
		set_air_oob = "GRE_air_bba"
		set_technology = {
			iw_small_airframe = 1
			aa_lmg = 1
			engines_1 = 1
			early_bombs = 1
		}
		else = {
			set_air_oob = "GRE_air_legacy"
			set_technology = {
				early_fighter = 1
				early_bomber = 1
				CAS1 = 1
			}
		}
	}

	if = {
		limit = { has_dlc = "No Step Back" }
		set_technology = {
			gwtank_chassis = 1
		}
		else = {
			set_technology = {
				gwtank = 1
			}
		}
	}

	if = {
		limit = { not = { has_dlc = "Man the Guns" } }
		set_technology = {
			early_submarine = 1
			early_destroyer = 1
			early_light_cruiser = 1
			early_heavy_cruiser = 1
			early_battleship = 1
			transport = 1
		}
	}
	if = {
		limit = { has_dlc = "Man the Guns" }
		set_technology = {
			basic_naval_mines = 1
			submarine_mine_laying = 1
			early_ship_hull_light = 1
			basic_ship_hull_light = 1
			early_ship_hull_submarine = 1
			basic_ship_hull_submarine = 1
			early_ship_hull_cruiser = 1
			early_ship_hull_heavy = 1
			basic_battery = 1
			basic_cruiser_armor_scheme = 1
			basic_torpedo = 1
			coastal_defense_ships = 1
			pre_dreadnoughts = 1
			mtg_transport = 1
		}
	}
}

GRE_enact_third_greturwar_peace = {
	#Democrats:
	if = {
		limit = {
			original_tag = GRE
			GRE = {
				has_country_flag = GRE_warwithturkey
				OR = {
					has_country_flag = GRE_path_progressives
					has_country_flag = GRE_path_lpf
				}
				has_war_with = TUR
				is_puppet = no
			}
			TUR = {
				surrender_progress > 0.2
			}
		}
		GRE = {
			country_event = gre.52
		}
	}
	#GRLE:
	if = {
		limit = {
			original_tag = GRE
			GRE = {
				has_country_flag = GRE_warwithturkey
				has_country_flag = GRE_path_glre
				has_war_with = TUR
				is_puppet = no
			}
			TUR = {
				surrender_progress > 0.5
			}
		}
		GRE = {
			country_event = gre.53
		}
	}
	#Communists:
	if = {
		limit = {
			original_tag = GRE
			GRE = {
				has_country_flag = GRE_warwithturkey
				OR = {
					has_country_flag = GRE_path_archiomarxists
					has_country_flag = GRE_path_socialists
				}
				has_war_with = TUR
				is_puppet = no
			}
			TUR = {
				surrender_progress > 0.5
			}
		}
		GRE = {
			country_event = gre.54
		}
	}
	#Turkey wins (how?)
	if = {
		limit = {
			original_tag = GRE
			GRE = {
				has_country_flag = GRE_warwithturkey
				has_war_with = TUR
				is_puppet = no
			}
			AND = {
				TUR = {
					controls_state = 340
					controls_state = 342
				}
				GRE = {
					surrender_progress > 0.5
				}
			}
		}
		GRE = {
			country_event = gre.55
		}
	}
}