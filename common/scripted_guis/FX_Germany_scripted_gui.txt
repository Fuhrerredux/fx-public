# German Mechanics Coded mainly by thanasislanaras and Dax
# with help from retiredlt
# shoutout to sprinkles and Sol Inherent for their help setting this up

scripted_gui = {
	GER_propaganda_campaigns_ui = {
		context_type = decision_category
		window_name = "FX_GER_propaganda_campaigns"
		# dirty = frame@var:propaganda_value
		dirty = GER_propaganda_dirty

		properties = {
			GER_propaganda_poster = {
				image = "[GerGetPropagandaSlotImage]"
				frame = var:frame@var:propaganda_value
				x = var:GER_propaganda_slot_x@var:propaganda_value
				y = var:GER_propaganda_slot_y@var:propaganda_value
			}

			GER_poster_textbox = {
				x = var:GER_propaganda_text_x@var:propaganda_value
				y = var:GER_propaganda_text_y@var:propaganda_value
			}
		}

		dynamic_lists = {
			GER_propaganda_campaigns_gridbox = {
				array = GER.propaganda_positions
				entry_container = FX_GER_propaganda_campaigns_entry_container
				value = propaganda_value
				index = propaganda_idx
				change_scope = no
			}
		}

	}
	GER_cultural_revolution_decisions_ui = {
		context_type = decision_category
		window_name = "GER_cultural_revolution_decisions"
		parent_window_token = decision_tab
		dirty = reich_morale_gauge
		dirty = reich_outlook_gauge

		effects = {
			GER_open_map_gui_btn_click = {
				if = {
					limit = {
						NOT = { has_country_flag = GER_open_map_gui }
					}
					set_country_flag = GER_open_map_gui
					GER_fix_variables_for_frame = yes
				} else = {
					clr_country_flag = GER_open_map_gui
				}
			}
		}

		properties = {
			GER_reich_morale_gauge = {
				frame = var:reich_morale_gauge
			}
			GER_social_outlook_gauge = {
				frame = var:reich_outlook_gauge
			}
		}
	}
	GER_cultural_revolution_state_window = {
		context_type = selected_state_context
		window_name = "GER_cultural_revolution_window"
		parent_window_token = selected_state_view
		dirty = selected_region
		dirty = GER.progress@THIS.belongs_to_region

		ai_enabled = { 
			original_tag = GER # should work for DDR, WGR later down the line
		}
		# ai_test_scopes cannot be used as some states are owned by RHI/AUS/SHO
		ai_test_interval = 16
		ai_test_variance = 1 #+/- 50% of ai_test_interval -> 3h - 24h -> every 0.3 to 1 days
		ai_weights = {
			GER_crack_down_on_dissident_groups_button_click = { ai_will_do = { base = 100 } }
			GER_replace_uncooperative_local_officials_button_click = { ai_will_do = { base = 100 } }
			GER_organize_a_valkist_parade_button_click = { ai_will_do = { base = 100 } }
			GER_fund_valkist_social_clubs_button_click = { ai_will_do = { base = 100 } }
		}
		ai_max_weight_taken_per_test = 4

		visible = {
			is_owned_by = ROOT
			# is_core_of = ROOT #commenting for now, cuz GER gets cores on some of the land a lot later on, and i think the mechanic should be active before
			GER_is_cultural_revolution_started = yes
			ROOT = { has_country_flag = GER_state_gui_open }
		}
		

		effects = {
			GER_crack_down_on_dissident_groups_button_click = {
				THIS = { set_state_flag = { flag = regional_action_taken days = 30 value = 1 } } 
				set_temp_variable = { selected_region = belongs_to_region }
				for_each_scope_loop = {
					array = GER.region_states@var:selected_region
					set_state_flag = { flag = regional_action_taken days = 30 value = 1 }
				}
				set_temp_variable = { amount = -2.5 }
				GER_add_attitude_to_root_region = yes
				set_temp_variable = { amount = 5 }
				GER_add_progress_to_root_region = yes
			}
			GER_replace_uncooperative_local_officials_button_click = {
				THIS = { set_state_flag = { flag = regional_action_taken days = 30 value = 1 } } 
				set_temp_variable = { selected_region = belongs_to_region }
				for_each_scope_loop = {
					array = GER.region_states@var:selected_region
					set_state_flag = { flag = regional_action_taken days = 30 value = 1 }
				}
				set_temp_variable = { amount = 10 }
				GER_add_attitude_to_root_region = yes
				set_temp_variable = { amount = -5 }
				GER_add_progress_to_root_region = yes
			}
			GER_organize_a_valkist_parade_button_click = {
				THIS = { set_state_flag = { flag = regional_action_taken days = 60 value = 1 } } 
				set_temp_variable = { selected_region = belongs_to_region }
				for_each_scope_loop = {
					array = GER.region_states@var:selected_region
					set_state_flag = { flag = regional_action_taken days = 60 value = 1 }
				}

				if = {
					limit = { GER = { has_country_flag = GER_built_up_neighborhood_corporations } }
					set_temp_variable = { amount = 10 }
				} else = { set_temp_variable = { amount = 5 } } # a bit more efficient this way because we dont have 2 assignments --thanasilanaras
				GER_add_attitude_to_root_region = yes
			}
			GER_fund_valkist_social_clubs_button_click = {
				THIS = { set_state_flag = { flag = regional_action_taken days = 60 value = 1 } }
				set_temp_variable = { selected_region = belongs_to_region }
				for_each_scope_loop = {
					array = GER.region_states@var:selected_region
					set_state_flag = { flag = regional_action_taken days = 60 value = 1 }
				}

				if = {
					limit = { GER = { has_country_flag = GER_book_on_valkism } }
					set_temp_variable = { amount = 10 }
				} else = { set_temp_variable = { amount = 5 } }

				GER_add_progress_to_root_region = yes
				if = {
					limit = { GER = { has_country_flag = GER_funded_valkist_associations } }
					set_temp_variable = { amount = 5 }
					GER_add_attitude_to_root_region = yes
				}
			}
			GER_close_rev_window_btn_click = {
				ROOT = { 
					if = { 
						limit = { has_country_flag = GER_state_gui_open } clr_country_flag = GER_state_gui_open 
					} else = { set_country_flag = GER_state_gui_open }
				} 
			}
		}

		triggers = {
			GER_crack_down_on_dissident_groups_button_click_enabled = {
				NOT = {
					THIS = { has_state_flag = regional_action_taken }
				}
			}
			GER_replace_uncooperative_local_officials_button_click_enabled = {
				NOT = {
					THIS = { has_state_flag = regional_action_taken }
				}
			}
			GER_organize_a_valkist_parade_button_click_enabled = {
				NOT = {
					THIS = { has_state_flag = regional_action_taken }
				}
			}
			GER_fund_valkist_social_clubs_button_click_enabled = {
				NOT = {
					THIS = { has_state_flag = regional_action_taken }
				}
			}
		}

		properties = {
			GER_state_cultural_revolution_progress = {
				frame =	GER.progress@THIS.belongs_to_region
			}
			GER_state_attitude_gauge = {
				frame = var:state_attitude_gauge
			}
		}
	}
	GER_cultural_revolution_mini_state_view = {
		window_name = "GER_cultural_revolution_mini_state_view"
		context_type = selected_state_context
		parent_window_token = selected_state_view
		visible = { 
			ROOT = { NOT = { has_country_flag = GER_state_gui_open } } 
			is_owned_by = GER
			is_core_of = GER
			GER_is_cultural_revolution_started = yes
		}

		effects = {
			GER_open_rev_window_btn_click = {
				ROOT = { 
					if = { 
						limit = { has_country_flag = GER_state_gui_open }
						clr_country_flag = GER_state_gui_open 
					}
					else = { set_country_flag = GER_state_gui_open }
				} 
			}
		}
	}
	GER_map_gui = {
		window_name = "FX_GER_map_gui"
		context_type = player_context
		dirty = region_selected
		dirty = region_value
		dirty = GER_map_gui_dirty_var

		effects = {
			GER_map_gui_close_btn_click = {
				ROOT = { clr_country_flag = GER_open_map_gui }
			}
			GER_map_region_click = {
				if = {
					limit = { NOT = { check_variable = { region_selected = region_value } } }
					GER = { set_variable = { region_selected = region_value } }
				} else = { clear_variable = region_selected }
			}

			GER_crack_down_on_dissident_groups_button_click = { 
				for_each_scope_loop = {
					array = GER.region_states@var:region_selected
					set_state_flag = { flag = regional_action_taken days = 30 value = 1 }
				}

				set_temp_variable = { amount = -2.5 }
				set_temp_variable = { region_to_apply = region_selected }
				GER_add_attitude_to_region_direct = yes # thx retired for the effect :)

				set_temp_variable = { amount = 5 }
				set_temp_variable = { region_to_apply = region_selected }
				GER_add_progress_to_region_direct = yes # thx again :)

				add_to_variable = { GER_map_gui_dirty_var = 1 }
			}
			GER_replace_uncooperative_local_officials_button_click = {
				for_each_scope_loop = {
					array = GER.region_states@var:region_selected
					set_state_flag = { flag = regional_action_taken days = 30 value = 1 }
				}

				set_temp_variable = { amount = 10 }
				set_temp_variable = { region_to_apply = region_selected }
				GER_add_attitude_to_region_direct = yes

				set_temp_variable = { amount = -5 }
				set_temp_variable = { region_to_apply = region_selected }
				GER_add_progress_to_region_direct = yes 

				add_to_variable = { GER_map_gui_dirty_var = 1 }
			}
			GER_organize_a_valkist_parade_button_click = {
				for_each_scope_loop = {
					array = GER.region_states@var:region_selected
					set_state_flag = { flag = regional_action_taken days = 60 value = 1 }
				}

				if = {
					limit = { GER = { has_country_flag = GER_built_up_neighborhood_corporations } }
					set_temp_variable = { amount = 10 }
				} else = { set_temp_variable = { amount = 5 } }
				
				set_temp_variable = { region_to_apply = region_selected }
				GER_add_attitude_to_region_direct = yes
				
				add_to_variable = { GER_map_gui_dirty_var = 1 }
			}
			GER_fund_valkist_social_clubs_button_click = {
				for_each_scope_loop = {
					array = GER.region_states@var:region_selected
					set_state_flag = { flag = regional_action_taken days = 60 value = 1 }
				}

				if = {
					limit = { GER = { has_country_flag = GER_book_on_valkism } }
					set_temp_variable = { amount = 10 }
				} else = { set_temp_variable = { amount = 5 } }
				set_temp_variable = { region_to_apply = region_selected }
				GER_add_progress_to_region_direct = yes

				if = {
					limit = { GER = { has_country_flag = GER_funded_valkist_associations } }
					set_temp_variable = { amount = 5 }
					set_temp_variable = { region_to_apply = region_selected }
					GER_add_attitude_to_region_direct = yes
				}
				
				add_to_variable = { GER_map_gui_dirty_var = 1 }
			}
		}

		triggers = {
			GER_map_region_click_enabled = {
				GER_compute_map_region_positions = yes
			}

			GER_crack_down_on_dissident_groups_button_click_enabled = {
				has_variable = region_selected
				NOT = {
					any_owned_state = {
						check_variable = { belongs_to_region = region_selected }
						has_state_flag = regional_action_taken
					}
				}
			}
			GER_replace_uncooperative_local_officials_button_click_enabled = {
				has_variable = region_selected
				NOT = {
					any_owned_state = {
						check_variable = { belongs_to_region = region_selected }
						has_state_flag = regional_action_taken
					}
				}
			}
			GER_organize_a_valkist_parade_button_click_enabled = {
				has_variable = region_selected
				NOT = {
					any_owned_state = {
						check_variable = { belongs_to_region = region_selected }
						has_state_flag = regional_action_taken
					}
				}
			}
			GER_fund_valkist_social_clubs_button_click_enabled = {
				has_variable = region_selected
				NOT = {
					any_owned_state = {
						check_variable = { belongs_to_region = region_selected }
						has_state_flag = regional_action_taken
					}
				}
			}
		}

		visible = {
			ROOT = { has_country_flag = GER_open_map_gui }
			GER_is_cultural_revolution_started = yes
		}

		properties = {
			GER_map_region = {
				x = GER_map_region_x
				y = GER_map_region_y
				frame = var:GER_map_region_frame
				image = "[GerGetMapImageStyle]"
			}
		}

		dynamic_lists = {
			GER_regions_gridbox = {
				array = GER.regions
				index = region_idx
				value = region_value
				# change_scope = yes
				entry_container = FX_GER_map_piece_entry_container
			}
		}
	}
	
	GER_stalhpakt_mechanic = {
		window_name = "FX_GER_stalhpakt_mechanic"
		context_type = player_context
		properties = {
			FX_leader_flag = {
				image = "[GER.GetFlag]"
			}
			member_flag = {
				image = "[THIS.GetFlag]"
			}
			# FX_stalhpakt_mechanic_leader_portrait = {
			# 	image = "GFX_Portrait_GER_Adam_Dressler"
			# }
			# agenda_icon = {
			# 	image = "[GER.GetDecisionItemIcon]"
			# }
			agenda_button = {
				frame = GER.stalhpakt_decision_button@agenda_value
			}
		}

		dynamic_lists = {
			FX_stalhpakt_members_list_grid = {
				array = GER.faction_members
				entry_container = FX_stalhpakt_members_list_grid_entry
				change_scope = yes
			}
			agenda_list_grid = {
				array = GER.agenda_decisions
				entry_container = FX_stalhpakt_mechanic_agenda_list_grid_entry
				# change_scope = yes
				value = agenda_value
				index = agenda_index
			}
		}

		visible = {
			has_country_flag = stalhpakt_mechanic_open
		}

		effects = {
			GER_close_btn_click = {
				clr_country_flag = stalhpakt_mechanic_open
			}
		}
	}


	GER_btn_political_menu = {
		window_name = "GER_btn_political_menu"
		context_type = player_context
		parent_window_token = politics_tab
		ai_enabled = { always = no }
		
		visible = { 
			original_tag = GER
			GER_is_cultural_revolution_started = yes
		}
		
		effects = {
			GER_open_map_gui_btn_click = {
				if = {
					limit = {
						NOT = { has_country_flag = GER_open_map_gui }
					}
					set_country_flag = GER_open_map_gui
					GER_fix_variables_for_frame = yes
				} else = {
					clr_country_flag = GER_open_map_gui
				}
			}
		}
	}

}