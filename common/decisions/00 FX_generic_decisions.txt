# REMOVED - thanasislanaras
# political_actions_left = {
# 	centralized_economic_planning = {
# 		icon = generic_industry
# 		cost = 100
# 		fire_only_once = no #May take this decision multiple times
# 		days_re_enable = 730 #2 years until the decision may be taken again
# 		days_remove = 30
# 		available = {
# 			OR = {
# 				has_government = vanguardist
# 				has_government = collectivist
# 			}
# 		}
# 		visible = {
# 			OR = {
# 				has_government = vanguardist
# 				has_government = collectivist
# 			}
# 		}
# 		modifier = {
# 			production_speed_buildings_factor = 0.1
# 			consumer_goods_factor = 0.025
# 			industrial_capacity_factory = -0.025
# 		}
# 		ai_will_do = {
# 			factor = 0
# 		}
# 	}
# 	decentralized_economic_planning = {
# 		icon = generic_industry
# 		cost = 100
# 		fire_only_once = no #May take this decision multiple times
# 		days_re_enable = 730 #2 years until the decision may be taken again
# 		days_remove = 30
# 		available = {
# 			has_government = libertarian_socialist
# 		}
# 		visible = {
# 			has_government = libertarian_socialist
# 		}
# 		modifier = {
# 			production_speed_buildings_factor = -0.05
# 			consumer_goods_factor = -0.05
# 			industrial_capacity_factory = 0.025
# 		}
# 		ai_will_do = {
# 			factor = 0
# 		}
# 	}
# }

# political_actions_dem = {
# 	industrial_privatization = {
# 		icon = generic_industry
# 		cost = 100
# 		fire_only_once = no #May take this decision multiple times
# 		days_re_enable = 730 #2 years until the decision may be taken again
# 		days_remove = 30
# 		available = {
# 			OR = {
# 				has_government = social_liberal
# 				has_government = market_liberal
# 			}
# 		}
# 		visible = {
# 			OR = {
# 				has_government = social_liberal
# 				has_government = market_liberal
# 			}
# 		}
# 		modifier = {
# 			industrial_capacity_factory = 0.1
# 			production_factory_max_efficiency_factor = 0.025
# 			consumer_goods_factor = 0.025
# 		}
# 		ai_will_do = {
# 			factor = 0
# 		}
# 	}
# 	economic_regulation = {
# 		icon = generic_industry
# 		days_remove = 30
# 		cost = 100
# 		fire_only_once = no #May take this decision multiple times
# 		days_re_enable = 730 #2 years until the decision may be taken again
# 		available = {
# 			OR = {
# 				has_government = social_conservative
# 				has_government = authoritarian_democrat
# 			}
# 		}
# 		visible = {
# 			OR = {
# 				has_government = social_conservative
# 				has_government = authoritarian_democrat
# 			}
# 		}
# 		modifier = {
# 			production_factory_max_efficiency_factor = 0.025
# 			consumer_goods_factor = -0.05
# 			industrial_capacity_factory = -0.05
# 		}
# 		ai_will_do = {
# 			factor = 0
# 		}
# 	}
# 	nationalize_key_industries = {
# 		icon = generic_industry
# 		cost = 100
# 		days_remove = 30
# 		fire_only_once = no #May take this decision multiple times
# 		days_re_enable = 730 #2 years until the decision may be taken again
# 		available = {
# 			has_government = social_democrat
# 		}
# 		visible = {
# 			has_government = social_democrat
# 		}
# 		modifier = {
# 			industrial_capacity_factory = 0.025
# 			consumer_goods_factor = -0.05
# 			production_factory_max_efficiency_factor = 0.05
# 		}
# 		ai_will_do = {
# 			factor = 0
# 		}
# 	}
# }

# political_actions_right = {
# 	nationalize_foreign_industries = {
# 		icon = generic_industry
# 		cost = 100
# 		fire_only_once = no #May take this decision multiple times
# 		days_re_enable = 730 #2 years until the decision may be taken again
# 		days_remove = 30
# 		available = {
# 			OR = {
# 				has_government = paternal_autocrat
# 				has_government = national_populist
# 				has_government = valkist
# 			}
# 		}
# 		visible = {
# 			OR = {
# 				has_government = paternal_autocrat
# 				has_government = national_populist
# 				has_government = valkist
# 			}
# 		}
# 		modifier = {
# 			production_factory_max_efficiency_factor = 0.05
# 			production_factory_efficiency_gain_factor = 0.05
# 			consumer_goods_factor = 0.03
# 		}

# 		ai_will_do = {
# 			factor = 0
# 		}
# 	}
# }


political_actions = {

	generic_raise_stability = {
		# Socialists: Improve Worker Conditions
		icon = {
			key = generic_industry
			trigger = { has_socialist_government = yes }
		}
		# Liberals: Legislate More Freedoms
		icon = {
			key = generic_civil_support
			trigger = {
				OR = {
					has_democratic_left_government = yes
					has_government = market_liberal
				}
			}
		}
		# SocCons: Police Crackdown
		icon = {
			key = oppression
			trigger = {
				OR = {
					has_government = social_conservative
					has_government = authoritarian_democrat
				}
			}
		}
		#Authoritarian -> 'Send in the Army'
		icon = {
			key = generic_army_support
			trigger = { has_dictatorship_government = yes }
		}
		
		available = { 
			has_stability < 1  
			NOT = { 
				has_country_flag = NO_GENERIC_STABILITY_DECISIONS 
			} 
		}
		modifier = {
			stability_weekly = 0.005
			consumer_goods_factor = 0.1
			industrial_capacity_factory = -0.1
		}

		cost = generic_raise_stability_decision_cost?100
		days_remove = 180
		days_re_enable = 540

		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_stability < 0.6
				has_political_power > 175 #Spend on other things first
			}
			modifier = {
				add = 1
				has_political_power > 200
			}
		}
	}

	generic_raise_support = {
		#Democratic -> 'Rally Public Support'
		icon = {
			key = generic_political_rally
			trigger = {
				NOT = {
					has_government = vanguardist
					has_authoritarian_government = yes
				}
			}
		}

		#Authoritarian -> 'Solidify Control'
		icon = {
			key = eng_propaganda_campaigns
			trigger = {
				OR = {
					has_government = vanguardist
					has_authoritarian_government = yes
				}
			}
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = "Party Popularity is less than 100%"
				check_variable = { party_popularity@ruling_party < 1 }
			}
			NOT = { has_country_flag = NO_GENERIC_STABILITY_DECISIONS }
		}

		cost = generic_raise_support_decision_cost?150
		days_remove = 180
		days_re_enable = 540

		remove_effect = {
			set_temp_variable = { ideology_change_var = 0.1 }
			change_ruling_party_popularity = yes
		}

		ai_will_do = {
			base = 0
		}
	}

	cut_red_tape = {
		icon = generic_operation
		fire_only_once = no
		days_remove = 90
		days_re_enable = 365
		cost = 100
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_STABILITY_DECISIONS
			}
		}
		visible = {
			OR = {
				has_government = social_conservative
				has_government = market_liberal
				has_government = social_liberal
			}
			NOT = {
				has_country_flag = NO_GENERIC_STABILITY_DECISIONS
			}
		}
		modifier = {
			stability_weekly = 0.005
			consumer_goods_factor = 0.025
			political_power_gain = -0.10
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cut_red_tape"
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_stability < 0.6
			}
		}
	}

	seize_some_trains_woo = {
		icon = GFX_decision_hol_draw_up_staff_plans

		visible = {
			has_tech = basic_train
			num_of_factories < 60
		}

		available = {
			has_equipment = { train_equipment < 101 }
			NOT = {
				has_country_flag = NO_GENERIC_STABILITY_DECISIONS
			}
		}

		days_remove = 180

		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_stability > 0.74
				has_equipment = { train_equipment < 15 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision seize_some_trains_woo"
			add_stability = -0.05
			add_equipment_to_stockpile = {
				type = train_equipment
				amount = 15
			}
		}
	}

	restructure_supply_system = { #one time boost to get a few cheap supply hubs
		icon = GFX_decision_generic_construction

		visible = {
			OR = {
				is_major = no
				AND = {
					is_faction_leader = yes
					num_of_factories < 51 #would be a minor if it wasn't for faction leader status
				}
			}
		}

		days_remove = 120
		fire_only_once = yes

		ai_will_do = { factor = 0 }

		modifier = {
			production_speed_supply_node_factor = 3
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision restructure_supply_system"
			set_variable = { node_goal = num_of_supply_nodes }
			add_to_variable = { node_goal = 3 } #maximum 3 additional nodes
		}

		cancel_trigger = {
			check_variable = { node_goal < num_of_supply_nodes } #if the number of supply nodes exceeds the old number by +3, immediately cancel
		}
	}

	KR_fight_for_independence = {
		icon = generic_independence

		allowed = {
			has_subject_autonomy_feature = no
		}

		available = {
			has_political_power > 0
			has_stability > 0.70
			surrender_progress < 0.05
		}

		targets = { overlord }
		target_trigger = {
			has_country_flag = FX_independence_refused # utilise someday maybe
			has_autonomy_state = autonomy_puppet
			is_subject_of = FROM
		}

		cost = 0
		fire_only_once = yes

		ai_will_do = {
			factor = 100
			modifier = {
				factor = 0
				strength_ratio = { tag = FROM ratio < 1.0 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision KR_fight_for_independence target: [From.GetName]"
			clr_country_flag = FX_independence_refused
			FROM = {
				add_opinion_modifier = { target = ROOT modifier = ITA_outraged }
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_free
				}
			}
			if = {
				limit = { is_in_faction = yes }
				leave_faction = yes
			}
			separate_peace_all_wars = yes
			# FROM = {
			# 	country_event = { id = generic_events.109 days = 1 }
			# }
		}
	}

	AI_expand_air_bases = {
		icon = generic_political_discourse

		visible = {
			has_global_flag = second_weltkrieg_has_started
			is_ai = yes
			has_war = yes
			has_manpower > 1000 #make sure they're not deploying due to lack of manpower

			#the AI never stockpiles planes if it can avoid it, so a positive stockpile ratio means they've run out of airbase space
			OR = {
				stockpile_ratio = { archetype = small_plane_airframe ratio > 0.02 }
				stockpile_ratio = { archetype = small_plane_cas_airframe ratio > 0.02 }
				stockpile_ratio = { archetype = small_plane_naval_bomber_airframe ratio > 0.02 }
				stockpile_ratio = { archetype = medium_plane_airframe ratio > 0.02 }
				stockpile_ratio = { archetype = medium_plane_fighter_airframe ratio > 0.02 }
				stockpile_ratio = { archetype = medium_plane_scout_plane_airframe ratio > 0.02 }
				stockpile_ratio = { archetype = large_plane_airframe ratio > 0.02 }
				stockpile_ratio = { archetype = large_plane_maritime_patrol_plane_airframe ratio > 0.02 }
			}
		}

		cost = 0
		days_re_enable = 20
		fire_only_once = no
		fixed_random_seed = no

		ai_will_do = { factor = 100 }

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision AI_expand_air_bases"
			every_controlled_state = {
				if = {
					limit = {
						is_fully_controlled_by = ROOT
						air_base < 10
					}
					add_to_temp_array = { air_base_potential_states = THIS }
				}
				if = {
					limit = {
						any_neighbor_state = { controller = { has_war_with = ROOT } }
					}
					if = {
						limit = {
							is_fully_controlled_by = ROOT
							air_base < 10
						}
						add_to_temp_array = { air_base_potential_states_neighbouring_enemy = THIS }
					}
					every_neighbor_state = {
						limit = {
							is_fully_controlled_by = ROOT
							air_base < 10
						}
						add_to_temp_array = { air_base_potential_states_close_to_enemy = THIS }
					}
				}
				if = {
					limit = {
						any_of_scopes = {
							array = air_base_potential_states_neighbouring_enemy
							is_in_home_area = yes
						}
					}
					set_temp_variable = { home_area_neighbouring_enemy = 1 }
				}
				if = {
					limit = {
						any_of_scopes = {
							array = air_base_potential_states_close_to_enemy
							is_in_home_area = yes
						}
					}
					set_temp_variable = { home_area_close_to_enemy = 1 }
				}
				if = {
					limit = {
						any_of_scopes = {
							array = air_base_potential_states
							is_in_home_area = yes
						}
					}
					set_temp_variable = { home_area_potential = 1 }
				}
			}
			random_controlled_state = {
				limit = {
					is_in_array = { air_base_potential_states = THIS }
					if = {
						limit = { has_variable = air_base_potential_states_neighbouring_enemy^num }
						is_in_array = { air_base_potential_states_neighbouring_enemy = THIS }
						if = {
							limit = { has_variable = home_area_neighbouring_enemy }
							is_in_home_area = yes
						}
					}
					else_if = {
						limit = { has_variable = air_base_potential_states_close_to_enemy^num }
						is_in_array = { air_base_potential_states_close_to_enemy = THIS }
						if = {
							limit = { has_variable = home_area_close_to_enemy }
							is_in_home_area = yes
						}
					}
					else_if = {
						limit = { has_variable = home_area_potential }
						is_in_home_area = yes
					}
				}
				add_building_construction = {
					type = air_base
					level = 1
					instant_build = no
				}
			}
		}
	}
}

economy_decisions = {
	infrastructure_building_slot = {
		icon = generic_construction
		cost = 80
		fire_only_once = no
		days_re_enable = 180
		available = {
			any_state = {
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				free_building_slots = {
					building = infrastructure
					size < 4
				}
			}
		}
		visible = {
			any_state = {
				NOT = { has_state_flag = infrastructure_building_slot_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision infrastructure_building_slot"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = infrastructure_building_slot_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					free_building_slots = {
						building = infrastructure
						size < 4
					}
				}
				add_extra_state_shared_building_slots = 1
				set_state_flag = infrastructure_building_slot_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	civilian_factory_commission = {
		icon = generic_construction
		cost = 125
		fire_only_once = no
		days_re_enable = 240
		available = {
			num_of_civilian_factories < 50
			any_state = {
				NOT = { has_state_flag = factory_comission_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				free_building_slots = { building = industrial_complex size > 1 include_locked = no }
			}
		}
		visible = {
			any_state = {
				NOT = { has_state_flag = factory_comission_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				free_building_slots = { building = industrial_complex size > 1 include_locked = no }
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision civilian_factory_commission"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = factory_comission_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					free_building_slots = { building = industrial_complex size > 1 include_locked = no }
				}
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				set_state_flag = factory_comission_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	arms_factory_commission = {
		icon = generic_construction
		cost = 125
		fire_only_once = no
		days_re_enable = 240
		available = {
			num_of_military_factories < 50
			any_state = {
				NOT = { has_state_flag = factory_comission_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				free_building_slots = { building = arms_factory size > 1 include_locked = no }
			}
		}
		visible = {
			any_state = {
				NOT = { has_state_flag = factory_comission_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				free_building_slots = { building = arms_factory size > 1 include_locked = no }
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision arms_factory_commission"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = factory_comission_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					free_building_slots = { building = arms_factory size > 1 include_locked = no }
				}
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
				set_state_flag = factory_comission_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	dockyard_commission = {
		icon = generic_construction
		cost = 125
		fire_only_once = no
		days_re_enable = 240
		available = {
			num_of_naval_factories < 50
			any_state = {
				NOT = { has_state_flag = factory_comission_flag }
				is_coastal = yes
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				free_building_slots = { building = dockyard size > 1 include_locked = no }
			}
		}
		visible = {
			any_state = {
				NOT = { has_state_flag = factory_comission_flag }
				is_coastal = yes
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				free_building_slots = { building = dockyard size > 1 include_locked = no }
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision dockyard_commission"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = factory_comission_flag }
					is_coastal = yes
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					free_building_slots = { building = dockyard size > 1 include_locked = no }
				}
				add_building_construction = {
					type = dockyard
					level = 1
					instant_build = yes
				}
				set_state_flag = factory_comission_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	expand_oil_rigs = {
		icon = oil
		cost = 100
		fire_only_once = no
		days_re_enable = 365
		days_remove = 60
		modifier = {
			civilian_factory_use = 2
		}
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			has_tech = excavation2
			num_of_civilian_factories_available_for_projects > 2
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = oil amount > 7 }
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = oil amount > 7 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove expand_oil_rigs"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = resources_exploited_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					has_resources_amount = { resource = oil amount > 7 }
				}
				add_resource = {
					type = oil
					amount = 8
				}
				set_state_flag = resources_exploited_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	expand_rubber_plants = {
		icon = rubber
		cost = 100
		fire_only_once = no
		days_re_enable = 365
		days_remove = 60
		modifier = {
			civilian_factory_use = 2
		}
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			has_tech = excavation2
			num_of_civilian_factories_available_for_projects > 2
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = rubber amount > 7 }
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = rubber amount > 7 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove expand_rubber_plants"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = resources_exploited_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					has_resources_amount = { resource = rubber amount > 7 }
				}
				add_resource = {
					type = rubber
					amount = 8
				}
				set_state_flag = resources_exploited_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	expand_steel_mines = {
		icon = steel
		cost = 100
		fire_only_once = no
		days_re_enable = 365
		days_remove = 60
		modifier = {
			civilian_factory_use = 2
		}
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			has_tech = excavation2
			num_of_civilian_factories_available_for_projects > 2
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = steel amount > 7 }
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = steel amount > 7 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove expand_steel_mines"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = resources_exploited_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					has_resources_amount = { resource = steel amount > 7 }
				}
				add_resource = {
					type = steel
					amount = 8
				}
				set_state_flag = resources_exploited_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	expand_aluminium_mines = {
		icon = aluminium
		cost = 100
		days_re_enable = 365
		days_remove = 60
		fire_only_once = no
		modifier = {
			civilian_factory_use = 2
		}
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			has_tech = excavation2
			num_of_civilian_factories_available_for_projects > 2
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = aluminium amount > 7 }
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = aluminium amount > 7 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove expand_aluminium_mines"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = resources_exploited_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					has_resources_amount = { resource = aluminium amount > 7 }
				}
				add_resource = {
					type = aluminium
					amount = 8
				}
				set_state_flag = resources_exploited_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	expand_tungsten_mines = {
		icon = tungsten
		cost = 100
		fire_only_once = no
		days_re_enable = 365
		days_remove = 60
		modifier = {
			civilian_factory_use = 2
		}
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			has_tech = excavation2
			num_of_civilian_factories_available_for_projects > 2
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = tungsten amount > 7 }
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = tungsten amount > 7 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove expand_tungsten_mines"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = resources_exploited_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					has_resources_amount = { resource = tungsten amount > 7 }
				}
				add_resource = {
					type = tungsten
					amount = 8
				}
				set_state_flag = resources_exploited_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
	expand_chromium_mines = {
		icon = chromium
		cost = 100
		fire_only_once = no
		days_re_enable = 365
		days_remove = 60
		modifier = {
			civilian_factory_use = 2
		}
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			has_tech = excavation2
			num_of_civilian_factories_available_for_projects > 2
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = chromium amount > 7 }
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_RESOURCE_DECISIONS
			}
			any_state = {
				NOT = { has_state_flag = resources_exploited_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				has_resources_amount = { resource = chromium amount > 7 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove expand_chromium_mines"
			random_owned_state = {
				limit = {
					NOT = { has_state_flag = resources_exploited_flag }
					is_fully_controlled_by = ROOT
					is_owned_by = ROOT
					has_resources_amount = { resource = chromium amount > 7 }
				}
				add_resource = {
					type = chromium
					amount = 8
				}
				set_state_flag = resources_exploited_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
	}
}

propaganda_efforts = {
	military_service_propaganda = {
		icon = generic_army_support
		days_remove = 365
		days_re_enable = 30
		cost = 50
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
			OR = {
				has_war = yes
				threat > 0.75
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
		}
		fire_only_once = no
		modifier = {
			conscription = 0.005
			mobilization_speed = 0.05
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision military_service_propaganda"
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				surrender_progress > 0.01
			}
		}
	}
	war_propaganda_casualties = {
		icon = generic_prepare_civil_war
		fire_only_once = no
		days_remove = 180
		cost = 100
		available = {
			has_casualties_war_support < 0
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
		}
		visible = {
			has_war_with_non_exiled_country = yes
		}
		remove_trigger = {
			has_war = no
		}
		modifier = {
			weekly_casualties_war_support = 0.006
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 10 #AI should probably just choose this one for general purposes.
				has_war = yes
				has_war_support < 0.7
			}
			modifier = {
				add = 20
				has_war = yes
				has_war_support < 0.5
			}
			modifier = {
				add = 30
				has_war = yes
				has_war_support < 0.3
			}
			modifier = {
				add = 201 #ie; consider prio idea
				has_war = yes
				has_casualties_war_support < -0.25
			}
			modifier = {
				factor = 0
				has_manpower < 100000
				has_political_power < 250
				OR = {
					has_idea = volunteer_only
					has_idea = limited_conscription
					has_idea = extensive_conscription
				}
			}
		}
	}
	war_propaganda_convoys = {
		icon = GFX_decision_generic_naval
		fire_only_once = no
		days_remove = 180
		cost = 100
		available = {
			has_convoys_war_support < 0
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
		}
		visible = {
			has_war_with_non_exiled_country = yes
		}
		remove_trigger = {
			has_war = no
		}
		modifier = {
			weekly_convoys_war_support = 0.006
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 201 #ie; consider prio idea
				has_war = yes
				has_convoys_war_support < -0.29
			}
			modifier = {
				factor = 0
				has_manpower < 100000
				has_political_power < 250
				OR = {
					has_idea = volunteer_only
					has_idea = limited_conscription
					has_idea = extensive_conscription
				}
			}
		}
	}
	war_propaganda_bombing = {
		icon = GFX_decision_generic_air
		available = {
			has_bombing_war_support < 0
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
		}
		visible = {
			has_war_with_non_exiled_country = yes
		}
		fire_only_once = no
		days_remove = 180
		remove_trigger = {
			has_war = no
		}
		cost = 100
		modifier = {
			weekly_bombing_war_support = 0.006
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 10 #AI should probably just choose this one for general purposes.
				has_war = yes
				has_war_support < 0.65
			}
			modifier = {
				add = 20
				has_war = yes
				has_war_support < 0.50
			}
			modifier = {
				add = 30
				has_war = yes
				has_war_support < 0.35
			}
			modifier = {
				add = 201 #ie; consider prio idea
				has_war = yes
				has_bombing_war_support < -0.20
			}
			modifier = {
				factor = 0
				has_manpower < 100000
				has_political_power < 250
				OR = {
					has_idea = volunteer_only
					has_idea = limited_conscription
					has_idea = extensive_conscription
				}
			}
		}
	}
	war_propaganda_radio_industry = {
		icon = GFX_decision_hol_radio_oranje
		available = {
			has_tech = radio
			threat > 0.25
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
		}
		cost = 75
		fire_only_once = yes
		complete_effect = {
			add_war_support = 0.05
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 201
				has_war_support < 0.6
			}
		}
	}
	war_propaganda_film_industry = {

		icon = generic_prepare_civil_war

		available = {
			has_war_with_non_exiled_country = yes
			OR = {
				is_major = yes
				any_allied_country = { is_major = yes }
			}
			threat > 0.5
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
		}

		cost = 100
		fire_only_once = yes

		complete_effect = {
			add_war_support = 0.10
		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 201
				has_war_support < 0.6
			}
		}
	}
	#Propaganda campaign against a country in offensive that has caused a lot of tension and started a war
	war_propaganda_against_warmonger = {
		icon = generic_prepare_civil_war
		days_remove = 90
		fire_only_once = yes
		cost = 75
		available = {
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
			NOT = { has_country_flag = war_propaganda_campaign_running }
			FROM = {
				OR = {
					has_offensive_war = yes
					is_justifying_wargoal_against = ROOT
				}
			}
		}
		visible = {
			NOT = {
				has_country_flag = NO_GENERIC_PROPAGANDA_DECISIONS
			}
			FROM = { NOT = { has_government = ROOT } }
			FROM = {
				NOT = { is_neighbor_of = ROOT }
				NOT = { is_in_faction_with = ROOT }
				OR = {
					AND = {
						NOT = { has_government = ROOT }
						has_offensive_war = yes
						has_added_tension_amount > 30
					}
					is_justifying_wargoal_against = ROOT
					has_offensive_war_with = ROOT
				}
			}
		}
		target_trigger = {
			FROM = {
				NOT = { is_neighbor_of = ROOT }
				NOT = { is_in_faction_with = ROOT }
				OR = {
					AND = {
						NOT = { has_government = ROOT }
						has_offensive_war = yes
						has_added_tension_amount > 30
					}
					is_justifying_wargoal_against = ROOT
					has_offensive_war_with = ROOT
				}
			}
		}
		modifier = {
			war_support_weekly = 0.01
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision war_propaganda_against_warmonger target: [From.GetName]"
			set_country_flag = war_propaganda_campaign_running
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove war_propaganda_against_warmonger target: [From.GetName]"
			clr_country_flag = war_propaganda_campaign_running
		}
		ai_will_do = {
			factor = 0
		}
	}
	#Propaganda campaign against a neighbor
	war_propaganda_against_warmonger_neighbor = {
		icon = generic_prepare_civil_war
		days_remove = 90
		days_re_enable = 180
		cost = 50
		available = {
			NOT = { has_country_flag = war_propaganda_campaign_running }
			FROM = {
				OR = {
					has_offensive_war = yes
					is_justifying_wargoal_against = ROOT
					has_war_with = ROOT
				}
			}
		}
		visible = {
			#FROM = { NOT = { has_government = ROOT } }
			FROM = {
				is_neighbor_of = ROOT
				NOT = { is_in_faction_with = ROOT }
				OR = {
					AND = {
						NOT = { has_government = ROOT }
						has_offensive_war = yes
					}
					is_justifying_wargoal_against = ROOT
					has_war_with = ROOT
				}
				#has_added_tension_amount > 5
			}
		}
		target_trigger = {
			FROM = {
				is_neighbor_of = ROOT
				NOT = { is_in_faction_with = ROOT }
				OR = {
					AND = {
						NOT = { has_government = ROOT }
						has_offensive_war = yes
					}
					is_justifying_wargoal_against = ROOT
					has_war_with = ROOT
				}
				#has_added_tension_amount > 5
			}
		}
		modifier = {
			war_support_weekly = 0.01
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision war_propaganda_against_warmonger_neighbor target: [From.GetName]"
			set_country_flag = war_propaganda_campaign_running
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove war_propaganda_against_warmonger_neighbor target: [From.GetName]"
			clr_country_flag = war_propaganda_campaign_running
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				has_war_support > 0.9
			}
		}
	}
}

war_measures = {
	emergency_factory_conversion_defensive = {
		icon = generic_industry
		fire_only_once = no
		days_re_enable = 90
		cost = 100
		available = {
			num_of_civilian_factories > 5 #Change this if amount of factories change
		}
		visible = {
			has_war = yes
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision emergency_factory_conversion_defensive"
			replace_civ_with_arms_factories = yes
			add_war_support = -0.05
		}
		ai_will_do = {
			factor = 0
		}
	}
	war_bonds = {
		icon = generic_industry
		fire_only_once = no
		days_remove = 210
		cost = 50
		available = {
			has_war = yes
			OR = {
				AND = {
					has_government = vanguardist
					has_war_support > 0.85
				}
				AND = {
					has_government = collectivist
					has_war_support > 0.79
				}
				AND = {
					has_government = libertarian_socialist
					has_war_support > 0.79
				}
				AND = {
					has_government = social_democrat
					has_war_support > 0.70
				}
				AND = {
					has_government = social_liberal
					has_war_support > 0.60
				}
				AND = {
					has_government = market_liberal
					has_war_support > 0.60
				}
				AND = {
					has_government = social_conservative
					has_war_support > 0.60
				}
				AND = {
					has_government = authoritarian_democrat
					has_war_support > 0.70
				}
				AND = {
					has_government = paternal_autocrat
					has_war_support > 0.79
				}
				AND = {
					has_government = national_populist
					has_war_support > 0.79
				}
				AND = {
					has_government = valkist
					has_war_support > 0.85
				}
			}
		}
		visible = {
			has_war = yes
		}
		modifier = {
			consumer_goods_factor = -0.05
		}
		ai_will_do = {
			factor = 1
			modifier = {
				has_political_power < 150
				factor = 0 #use as pp dump
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove war_bonds"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision war_bonds"
		}
	}
	diversify_special_forces = {
		icon = GFX_decision_generic_military

		available = {
			date > 1940.1.1
		}

		visible = {
			is_major = yes
		}

		cost = 50
		fire_only_once = yes

		complete_effect = {
			add_potential_special_forces_tree = yes
		}

		ai_will_do = { factor = 100 }
	}
}

foreign_support = {
	return_cores_to_ally = {
		icon = generic_agreement
		available = {
			if = {
				limit = { has_war = yes }
				surrender_progress < 0.20
			}
			else = {
				has_war = no
			}
		}
		target_root_trigger = {
			is_in_faction = yes
			NOT = {
				has_cosmetic_tag = GER_POL_gg 
				has_cosmetic_tag = GER_UKR_gg 
				has_cosmetic_tag = GER_BLR_gg 
				has_cosmetic_tag = GER_RUS_gg 
				has_cosmetic_tag = GER_KAU_gg 
				has_cosmetic_tag = GER_HOL_gg 
				has_cosmetic_tag = GER_NOR_gg 
				has_cosmetic_tag = GER_NORD_gg 
				has_cosmetic_tag = GER_SLO_gg 
				has_cosmetic_tag = GER_east_confederation 
				has_cosmetic_tag = GER_west_confederation 
				has_cosmetic_tag = GER_north_confederation
				has_cosmetic_tag = FRP_reduced 
				has_cosmetic_tag = GER_NRM_reduced 
				has_cosmetic_tag = GER_OCC_reduced 
				has_cosmetic_tag = GER_WLL_reduced 
				has_cosmetic_tag = GER_FLA_reduced 
				has_cosmetic_tag = GER_LOM_reduced 
				has_cosmetic_tag = GER_UPC_reduced 
				has_cosmetic_tag = GER_SIC_reduced 
				has_cosmetic_tag = GER_HSR_reduced 
				has_cosmetic_tag = GER_ROM_reduced 
				has_cosmetic_tag = GER_ROR_reduced 
				has_cosmetic_tag = GER_SPF_reduced 
				has_cosmetic_tag = GER_SPA_reduced 
				has_cosmetic_tag = GER_SPM_reduced 
				has_cosmetic_tag = GER_SPR_reduced 
			}
		}
		target_array = faction_members
		target_array = subjects
		target_trigger = {
			country_exists = FROM
			is_ally_with = FROM
			NOT = {
				has_country_flag = FX_returning_land
				has_country_flag = FX_checking_for_possible_annexations
			}
			any_owned_state = {
				is_claim_or_core_of_FROM = yes
				is_claim_or_core_of_ROOT = no
				OR = {
					any_neighbor_state = { is_owned_by = FROM }
					is_coastal = yes
				}
				NOT = { has_state_flag = FX_keeping_state@ROOT }
				NOT = { has_variable = can_integrate_@ROOT }
				NOT = { any_country_with_core = { has_variable = ROOT.can_integrate_@THIS } }
			}
		}
		cost = 0
		fire_only_once = no
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0.1
				FROM = {
					is_subject = yes
					NOT = { is_subject_of = ROOT }
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision return_cores_to_ally target: [From.GetName]"
			set_country_flag = FX_returning_land
			FROM = { save_event_target_as = return_to }
			country_event = decisions.3
		}
	}
}
